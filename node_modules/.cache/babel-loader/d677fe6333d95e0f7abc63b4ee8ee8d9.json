{"ast":null,"code":"import axios from 'axios';\nimport axiosWithAuth from '../Utils/axiosWithAuth.js';\nimport jwt_decode from 'jwt-decode';\nexport const FETCH_REQUEST_PROGRESS = 'FETCH_REQUEST_PROGRESS';\nexport const FETCH_REQUEST_SUCCESS = 'FETCH_REQUEST_SUCCESS';\nexport const FETCH_REQUEST_FAILURE = \"FETCH_REQUEST_FAILURE\";\nexport const ADD_NEW_RECIPE = \"ADD_NEW_RECIPE\";\nexport const SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\";\nexport const EDIT_RECIPE = \"EDIT_RECIPE\";\nexport const DELETE_RECIPE = \"DELETE_RECIPE\";\nexport const SEARCH_RECIPE = \"SEARCH_RECIPE\";\nexport const CLEAR_SEARCH = \"CLEAR_SEARCH\";\nexport const addRecipe = recipeObj => {\n  return {\n    type: ADD_NEW_RECIPE,\n    payload: { ...recipeObj\n    }\n  };\n};\nexport const clearSearch = () => {\n  return {\n    type: CLEAR_SEARCH\n  };\n};\nexport const searchRecipe = searchTerm => {\n  return {\n    type: SEARCH_RECIPE,\n    payload: searchTerm\n  };\n};\nexport const setError = errorMessage => {\n  return {\n    type: SET_ERROR_MESSAGE,\n    payload: errorMessage\n  };\n}; //This helps us decode the token\n\nlet decoded = \" \";\nlet token = localStorage.getItem('authToken');\n\nif (token) {\n  decoded = jwt_decode(token);\n  console.log(decoded);\n}\n\nexport const fetchRecipes = id => dispatch => {\n  dispatch({\n    type: FETCH_REQUEST_PROGRESS\n  });\n  axiosWithAuth().get(`/api/users/${id}/recipes`).then(res => {\n    console.log(res);\n    dispatch({\n      type: FETCH_REQUEST_SUCCESS,\n      payload: res.data.recipes\n    });\n  }).catch(err => {\n    console.log(err.message);\n    dispatch({\n      type: FETCH_REQUEST_FAILURE,\n      payload: err.message\n    });\n  });\n};\nexport const deleteRecipe = id => dispatch => {\n  axiosWithAuth().delete(`/api/recipes/${id}`).then(res => {\n    console.log(res);\n  }).catch(err => {\n    console.log(err.message);\n    dispatch({\n      type: FETCH_REQUEST_FAILURE,\n      payload: err.message\n    });\n  });\n};\nexport const updateRecipe = (id, newObj, user_id) => dispatch => {\n  axiosWithAuth().put(`/api/recipes/${id}`, {\n    user_id: user_id,\n    title: newObj.title,\n    source: newObj.recipe_source,\n    ingredients: newObj.recipe_ingredients,\n    category: newObj.recipe_category,\n    instructions: newObj.recipe_instructions\n  }).then(res => {\n    console.log(res);\n  }).catch(err => {\n    console.log(err.message);\n    dispatch({\n      type: FETCH_REQUEST_FAILURE,\n      payload: err.message\n    });\n  });\n};","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/actions/index.js"],"names":["axios","axiosWithAuth","jwt_decode","FETCH_REQUEST_PROGRESS","FETCH_REQUEST_SUCCESS","FETCH_REQUEST_FAILURE","ADD_NEW_RECIPE","SET_ERROR_MESSAGE","EDIT_RECIPE","DELETE_RECIPE","SEARCH_RECIPE","CLEAR_SEARCH","addRecipe","recipeObj","type","payload","clearSearch","searchRecipe","searchTerm","setError","errorMessage","decoded","token","localStorage","getItem","console","log","fetchRecipes","id","dispatch","get","then","res","data","recipes","catch","err","message","deleteRecipe","delete","updateRecipe","newObj","user_id","put","title","source","recipe_source","ingredients","recipe_ingredients","category","recipe_category","instructions","recipe_instructions"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport axiosWithAuth from '../Utils/axiosWithAuth.js';\nimport jwt_decode from 'jwt-decode';\n\nexport const FETCH_REQUEST_PROGRESS = 'FETCH_REQUEST_PROGRESS';\nexport const FETCH_REQUEST_SUCCESS = 'FETCH_REQUEST_SUCCESS';\nexport const FETCH_REQUEST_FAILURE = \"FETCH_REQUEST_FAILURE\";\nexport const ADD_NEW_RECIPE = \"ADD_NEW_RECIPE\";\nexport const SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\";\nexport const EDIT_RECIPE = \"EDIT_RECIPE\";\nexport const DELETE_RECIPE = \"DELETE_RECIPE\";\nexport const SEARCH_RECIPE = \"SEARCH_RECIPE\";\nexport const CLEAR_SEARCH = \"CLEAR_SEARCH\";\n\nexport const addRecipe = (recipeObj) => {\n    return { type: ADD_NEW_RECIPE, payload: { ...recipeObj } };\n}\n\nexport const clearSearch = () => {\n    return { type: CLEAR_SEARCH };\n}\n\nexport const searchRecipe = (searchTerm) => {\n    return { type: SEARCH_RECIPE, payload: searchTerm };\n}\n\nexport const setError = (errorMessage) => {\n    return { type: SET_ERROR_MESSAGE, payload: errorMessage };\n}\n\n//This helps us decode the token\nlet decoded = \" \"\nlet token = localStorage.getItem('authToken');\nif (token) {\n    decoded = jwt_decode(token);\n    console.log(decoded);\n}\n\nexport const fetchRecipes = (id) => (dispatch) => {\n    dispatch({ type: FETCH_REQUEST_PROGRESS })\n\n    axiosWithAuth().get(`/api/users/${id}/recipes`)\n        .then((res) => {\n            console.log(res);\n            dispatch({ type: FETCH_REQUEST_SUCCESS, payload: res.data.recipes })\n        })\n        .catch((err) => {\n            console.log(err.message);\n            dispatch({ type: FETCH_REQUEST_FAILURE, payload: err.message })\n        })\n}\n\nexport const deleteRecipe = (id) => (dispatch) => {\n    axiosWithAuth().delete(`/api/recipes/${id}`)\n        .then((res) => {\n            console.log(res);\n        })\n        .catch((err) => {\n            console.log(err.message);\n            dispatch({ type: FETCH_REQUEST_FAILURE, payload: err.message });\n        })\n}\n\nexport const updateRecipe = (id, newObj, user_id) => (dispatch) => {\n    axiosWithAuth().put(`/api/recipes/${id}`, {\n        user_id: user_id, title: newObj.title, source: newObj.recipe_source, ingredients: newObj.recipe_ingredients,\n        category: newObj.recipe_category, instructions: newObj.recipe_instructions\n    })\n        .then((res) => {\n            console.log(res);\n        })\n        .catch((err) => {\n            console.log(err.message);\n            dispatch({ type: FETCH_REQUEST_FAILURE, payload: err.message });\n        })\n}\n\n"]},"metadata":{},"sourceType":"module"}