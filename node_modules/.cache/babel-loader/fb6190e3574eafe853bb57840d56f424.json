{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { searchRecipe, clearSearch } from '../actions/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  const [search, setSearch] = useState(\" \");\n\n  const registerSearch = evt => {\n    console.log(evt.target.name, evt.target.value);\n    setSearch(evt.target.value);\n  };\n\n  const clearSearch = evt => {\n    evt.preventDefault();\n    setSearch(\" \");\n    props.clearSearch(search);\n  };\n\n  const searchRecipe = evt => {\n    evt.preventDefault();\n    console.log(search);\n    props.searchRecipe(search);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"search recipes\",\n      name: \"search\",\n      value: search,\n      onChange: registerSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchRecipe,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearSearch,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"76AcNSPSgg946Z1z6XZ0nWyuHMU=\");\n\n_c = Search;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchRecipe: term => dispatch(searchRecipe(term)),\n    clearSearch: () => dispatch(clearSearch())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Search);\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/search.js"],"names":["React","useState","connect","searchRecipe","clearSearch","Search","props","search","setSearch","registerSearch","evt","console","log","target","name","value","preventDefault","mapDispatchToProps","dispatch","term"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,qBAA1C;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,GAAD,CAApC;;AAEA,QAAMQ,cAAc,GAAIC,GAAD,IAAS;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAJ,CAAWC,IAAvB,EAA6BJ,GAAG,CAACG,MAAJ,CAAWE,KAAxC;AACAP,IAAAA,SAAS,CAACE,GAAG,CAACG,MAAJ,CAAWE,KAAZ,CAAT;AACH,GAHD;;AAKA,QAAMX,WAAW,GAAIM,GAAD,IAAS;AACzBA,IAAAA,GAAG,CAACM,cAAJ;AACAR,IAAAA,SAAS,CAAC,GAAD,CAAT;AACAF,IAAAA,KAAK,CAACF,WAAN,CAAkBG,MAAlB;AACH,GAJD;;AAMA,QAAMJ,YAAY,GAAIO,GAAD,IAAS;AAC1BA,IAAAA,GAAG,CAACM,cAAJ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAD,IAAAA,KAAK,CAACH,YAAN,CAAmBI,MAAnB;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,gBAA/B;AAAgD,MAAA,IAAI,EAAC,QAArD;AAA8D,MAAA,KAAK,EAAEA,MAArE;AAA6E,MAAA,QAAQ,EAAEE;AAAvF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEN,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA3BD;;GAAMC,M;;KAAAA,M;;AA6BN,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHf,IAAAA,YAAY,EAAGgB,IAAD,IAAUD,QAAQ,CAACf,YAAY,CAACgB,IAAD,CAAb,CAD7B;AAEHf,IAAAA,WAAW,EAAE,MAAMc,QAAQ,CAACd,WAAW,EAAZ;AAFxB,GAAP;AAIH,CALD;;AAOA,eAAeF,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { searchRecipe, clearSearch } from '../actions/index.js';\n\nconst Search = (props) => {\n    const [search, setSearch] = useState(\" \")\n\n    const registerSearch = (evt) => {\n        console.log(evt.target.name, evt.target.value);\n        setSearch(evt.target.value);\n    }\n\n    const clearSearch = (evt) => {\n        evt.preventDefault();\n        setSearch(\" \");\n        props.clearSearch(search);\n    }\n\n    const searchRecipe = (evt) => {\n        evt.preventDefault();\n        console.log(search);\n        props.searchRecipe(search);\n    }\n\n    return (\n        <div className=\"search\">\n            <input type=\"text\" placeholder=\"search recipes\" name=\"search\" value={search} onChange={registerSearch} />\n            <button onClick={searchRecipe}>Search</button>\n            <button onClick={clearSearch}>Clear</button>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        searchRecipe: (term) => dispatch(searchRecipe(term)),\n        clearSearch: () => dispatch(clearSearch())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Search);"]},"metadata":{},"sourceType":"module"}