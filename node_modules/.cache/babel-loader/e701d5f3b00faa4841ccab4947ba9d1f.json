{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios'; // Create a schema to create a submitting criteria for our sign up\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  name: yup.string().required('name is required').min(2, 'name needs to be more than 2 chars'),\n  email: yup.string().required('email is required'),\n  username: yup.string().required('username is required'),\n  password: yup.string().required('password is required'),\n  cPassword: yup.string().required('please confirm password')\n});\n\nconst Signup = props => {\n  _s();\n\n  //Use State to take all our data in\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    username: '',\n    password: '',\n    cPassword: ''\n  });\n  const [errors, setErrors] = useState({\n    name: '',\n    email: '',\n    username: '',\n    password: '',\n    cPassword: ''\n  });\n  const [disabled, setDisabled] = useState(true); // create a onChange handler for inputs to recognize change going on\n  //    if(/^[a-zA-Z]+$/.test(event.target.value)){          <=== was originally used for names to only input alphabet only (no 1-0) \n  //                                                              got rid of it because it didn't delete the first letter, and didn't recognize spaces\n  //   }\n\n  const onInputChange = event => {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  useEffect(() => {\n    schema.isValid(formData).then(valid => setDisabled(!valid));\n  }, [formData]); // create a submit function too submit our date once its all put in\n\n  const onSubmit = function (event) {\n    event.preventDefault();\n  }; //create a helper function too confirm if \"comfirm password\" === \"password\"\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signupForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sign Up Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \" Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"John Doe\",\n          type: \"text\",\n          name: \"name\",\n          id: \"name\",\n          onChange: onInputChange,\n          value: formData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"JohnDoe@John.com\",\n          type: \"text\",\n          name: \"email\",\n          id: \"email\",\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"JohnDoe@John.com\",\n          type: \"text\",\n          name: \"email\",\n          id: \"email\",\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \" Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"JohnDoe1234\",\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \" Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Password1234\",\n          type: \"text\",\n          name: \"password\",\n          id: \"password\",\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cPassword\",\n          children: \" Confirm Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Password1234\",\n          type: \"text\",\n          name: \"cPassword\",\n          id: \"cPassword\",\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"1vHnoLdPql803OVg+BoLxEshuAM=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/signup.js"],"names":["React","useState","useEffect","yup","axios","schema","object","name","string","required","min","email","username","password","cPassword","Signup","props","formData","setFormData","errors","setErrors","disabled","setDisabled","onInputChange","event","target","value","isValid","then","valid","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup'\nimport axios from 'axios'\n\n// Create a schema to create a submitting criteria for our sign up\n\nconst schema = yup.object({\n    name: yup.string().required('name is required').min(2, 'name needs to be more than 2 chars'),\n    email: yup.string().required('email is required'),\n    username: yup.string().required('username is required'),\n    password: yup.string().required('password is required'),\n    cPassword: yup.string().required('please confirm password'),\n})\nconst Signup = (props) => {\n    //Use State to take all our data in\n    const [formData, setFormData] = useState({ name: '', email: '', username: '', password: '', cPassword: '' })\n    const [errors, setErrors] = useState({ name: '', email: '', username: '', password: '', cPassword: '' })\n    const [disabled, setDisabled] = useState(true);\n\n    // create a onChange handler for inputs to recognize change going on\n\n\n    //    if(/^[a-zA-Z]+$/.test(event.target.value)){          <=== was originally used for names to only input alphabet only (no 1-0) \n    //                                                              got rid of it because it didn't delete the first letter, and didn't recognize spaces\n    //   }\n    const onInputChange = event => {\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    useEffect(() => {\n        schema.isValid(formData).then(valid => setDisabled(!valid))\n    }, [formData])\n    // create a submit function too submit our date once its all put in\n\n    const onSubmit = function (event) {\n        event.preventDefault()\n    }\n\n    //create a helper function too confirm if \"comfirm password\" === \"password\"\n    return (\n        <div className=\"signupForm\" >\n            <h3>Sign Up Form</h3>\n            <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\" > Name: </label>\n                    <input placeholder=\"John Doe\" type=\"text\" name=\"name\" id=\"name\" onChange={onInputChange} value={formData.name} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\"> Email: </label>\n                    <input placeholder=\"JohnDoe@John.com\" type=\"text\" name=\"email\" id=\"email\" onChange={onInputChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\"> Email: </label>\n                    <input placeholder=\"JohnDoe@John.com\" type=\"text\" name=\"email\" id=\"email\" onChange={onInputChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\"> Username: </label>\n                    <input placeholder=\"JohnDoe1234\" type=\"text\" name=\"username\" id=\"username\" onChange={onInputChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\"> Password: </label>\n                    <input placeholder=\"Password1234\" type=\"text\" name=\"password\" id=\"password\" onChange={onInputChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"cPassword\"> Confirm Password: </label>\n                    <input placeholder=\"Password1234\" type=\"text\" name=\"cPassword\" id=\"cPassword\" onChange={onInputChange} />\n                </div>\n                <button>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}