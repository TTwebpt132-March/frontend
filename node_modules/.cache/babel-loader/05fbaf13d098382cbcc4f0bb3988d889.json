{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup'; //structuring my form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  email: \"\",\n  password: \"\"\n};\nconst initialFormErrors = {\n  email: \"\",\n  password: \"\"\n};\nconst initialDisabled = true; // formSchema for validation\n\nconst FormSchema = yup.object().shape({\n  email: yup.string().email('Must be a valid email address').required('Email is required'),\n  password: yup.string().min(8, 'Password must be 8 characters long').required('Password is required, please fill out.')\n});\n\nconst Login = () => {\n  _s();\n\n  //states\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled); //input handlers\n\n  const inputChange = (name, value) => {\n    yup.reach({\n      FormSchema,\n      name\n    }).validate(value).then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    FormSchema.isValid(formValues).then(valid => setDisabled(!valid));\n  }, [formValues]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formValues.email,\n          onChange: inputChange,\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formValues.password,\n          onChange: inputChange,\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginBtn\",\n        disabled: disabled,\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"E6hjptUmci94DZY/5Zr2kRydSKg=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/login.js"],"names":["React","useState","useEffect","yup","initialFormValues","email","password","initialFormErrors","initialDisabled","FormSchema","object","shape","string","required","min","Login","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","inputChange","name","value","reach","validate","then","catch","err","errors","isValid","valid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\n//structuring my form\nconst initialFormValues = {\n    email: \"\",\n    password: \"\"\n    }\n    const initialFormErrors = {\n    email: \"\",\n    password: \"\"\n    }\n    const initialDisabled = true\n// formSchema for validation\n    const FormSchema = yup.object().shape({\n\n        email: yup.string()\n            .email('Must be a valid email address')\n            .required('Email is required'),\n        password: yup.string()\n            .min(8,'Password must be 8 characters long')\n            .required('Password is required, please fill out.'),   \n    })\n\nconst Login = () => {\n //states\nconst [formValues, setFormValues] = useState(initialFormValues)\nconst [formErrors, setFormErrors] = useState(initialFormErrors)\nconst [disabled, setDisabled] = useState(initialDisabled)\n//input handlers\nconst inputChange = (name, value) =>{\n    yup.reach({FormSchema,name})\n    .validate(value)\n    .then(()=>{\n      setFormErrors({...formErrors, [name]: ''})\n    })\n    .catch(err=>{\n      setFormErrors({...formErrors, [name]: err.errors[0]})\n    })\n    setFormValues({\n      ...formValues,\n      [name]: value\n    })\n  }\n\n  useEffect(() =>{\n    FormSchema.isValid(formValues).then(valid => setDisabled(!valid))\n  },[formValues])\n  \n\n    return (\n        <form className = 'login container'>\n \n\n        <div>\n        <label>Email&nbsp;\n        <input\n        value = {formValues.email}\n        onChange = {inputChange}\n        name = 'email'\n        type = 'email'\n        />\n        </label>\n        <label>Password&nbsp;\n            <input\n            value = {formValues.password}\n            onChange = {inputChange}\n            name = 'password'\n            type = 'password'\n            />\n        </label>\n\n        <button className='loginBtn' disabled={disabled}> Login </button>\n        </div>\n        </form>\n    )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}