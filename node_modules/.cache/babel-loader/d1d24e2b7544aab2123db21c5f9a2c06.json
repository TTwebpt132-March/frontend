{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup'; //structuring my form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  username: \"\",\n  password: \"\"\n};\nconst initialFormErrors = {\n  username: \"\",\n  password: \"\"\n};\nconst initialDisabled = true; // formSchema for validation\n\nconst FormSchema = yup.object({\n  username: yup.string().required('username is required'),\n  password: yup.string().min(8, 'Password must be 8 characters long').required('Password is required, please fill out.')\n});\n\nconst Login = props => {\n  _s();\n\n  //states\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled); //input handlers\n\n  const setFormErrors = (name, value) => {\n    yup.reach(validationSchema, name).validate(value).then(() => setErrors({ ...errors,\n      [name]: ''\n    })).catch(err => {\n      setErrors({ ...errors,\n        [name]: err.errors\n      });\n    });\n  };\n\n  const change = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setFormErrors(name, value);\n    setFormErrors({ ...form,\n      [name]: value\n    });\n  };\n\n  const inputChange = (name, value) => {\n    yup.reach({\n      FormSchema,\n      name\n    }).validate(value).then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    FormSchema.isValid(formValues).then(valid => setDisabled(!valid));\n  }, [formValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValues.username,\n        id: \"username\",\n        onChange: inputChange,\n        name: \"username\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValues.password,\n        id: \"password\",\n        onChange: inputChange,\n        name: \"password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginBtn\",\n        disabled: disabled,\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"rhWQmbjZsXHlRV1fu43tGoURxH8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/login.js"],"names":["React","useState","useEffect","yup","initialFormValues","username","password","initialFormErrors","initialDisabled","FormSchema","object","string","required","min","Login","props","formValues","setFormValues","formErrors","setErrors","disabled","setDisabled","setFormErrors","name","value","reach","validationSchema","validate","then","errors","catch","err","change","event","target","form","inputChange","isValid","valid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\n//structuring my form\nconst initialFormValues = {\n    username: \"\",\n    password: \"\"\n}\nconst initialFormErrors = {\n    username: \"\",\n    password: \"\"\n}\nconst initialDisabled = true\n// formSchema for validation\nconst FormSchema = yup.object({\n    username: yup.string()\n        .required('username is required'),\n    password: yup.string()\n        .min(8, 'Password must be 8 characters long')\n        .required('Password is required, please fill out.'),\n})\n\nconst Login = (props) => {\n    //states\n    const [formValues, setFormValues] = useState(initialFormValues)\n    const [formErrors, setErrors] = useState(initialFormErrors)\n    const [disabled, setDisabled] = useState(initialDisabled)\n    //input handlers\n\n    const setFormErrors = (name, value) => {\n        yup.reach(validationSchema, name).validate(value)\n            .then(() => setErrors({ ...errors, [name]: '' }))\n            .catch(err => {\n                setErrors({ ...errors, [name]: err.errors })\n            })\n    }\n\n    const change = event => {\n        const { value, name } = event.target;\n        setFormErrors(name, value);\n        setFormErrors({ ...form, [name]: value });\n    }\n\n    const inputChange = (name, value) => {\n        yup.reach({ FormSchema, name })\n            .validate(value)\n            .then(() => {\n                setFormErrors({ ...formErrors, [name]: '' })\n            })\n            .catch(err => {\n                setFormErrors({ ...formErrors, [name]: err.errors[0] })\n            })\n        setFormValues({\n            ...formValues,\n            [name]: value\n        })\n    }\n\n    useEffect(() => {\n        FormSchema.isValid(formValues).then(valid => setDisabled(!valid))\n    }, [formValues])\n\n\n    return (\n        <div>\n            <form className='login container'>\n                <label htmlFor=\"username\">Username: </label>\n                <input\n                    value={formValues.username}\n                    id=\"username\"\n                    onChange={inputChange}\n                    name='username'\n                    type='text'\n                />\n                <label htmlFor=\"password\">Password: </label>\n                <input\n                    value={formValues.password}\n                    id=\"password\"\n                    onChange={inputChange}\n                    name='password'\n                    type='password'\n                />\n                <button className='loginBtn' disabled={disabled}> Login </button>\n            </form>\n        </div>\n    )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}