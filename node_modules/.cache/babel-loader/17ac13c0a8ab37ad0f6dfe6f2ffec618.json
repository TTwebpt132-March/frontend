{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MiniCard from './minirecipecard.js';\nimport { Container } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  _s();\n\n  const history = useHistory();\n  const [search, setSearch] = useState(\" \");\n\n  const logout = evt => {\n    evt.preventDefault();\n    localStorage.removeItem('authToken');\n    history.push('/');\n  };\n\n  const navigateFunction = evt => {\n    history.push('/form');\n  };\n\n  const searchRecipe = evt => {\n    console.log(evt.target.name, evt.target.value);\n    setSearch(evt.target.value);\n  };\n\n  const clearSearch = evt => {\n    evt.preventDefault();\n    setSearch(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navButton\",\n        onClick: navigateFunction,\n        children: \"Enter New Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search recipes\",\n          name: \"search\",\n          value: search,\n          onChange: searchRecipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navButton\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"card-container\",\n      fluid: true,\n      children: props.recipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(MiniCard, {\n          recipe: recipe\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"68MIcRLicRW+yWXeLtjjVqHaesg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nexport default connect(mapStateToProps, null)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/dashboard.js"],"names":["React","useState","MiniCard","Container","useHistory","connect","Dashboard","props","history","search","setSearch","logout","evt","preventDefault","localStorage","removeItem","push","navigateFunction","searchRecipe","console","log","target","name","value","clearSearch","recipes","map","recipe","id","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,GAAD,CAApC;;AAEA,QAAMU,MAAM,GAAIC,GAAD,IAAS;AACpBA,IAAAA,GAAG,CAACC,cAAJ;AACAC,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACAP,IAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACH,GAJD;;AAMA,QAAMC,gBAAgB,GAAIL,GAAD,IAAS;AAC9BJ,IAAAA,OAAO,CAACQ,IAAR,CAAa,OAAb;AACH,GAFD;;AAIA,QAAME,YAAY,GAAIN,GAAD,IAAS;AAC1BO,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACS,MAAJ,CAAWC,IAAvB,EAA6BV,GAAG,CAACS,MAAJ,CAAWE,KAAxC;AACAb,IAAAA,SAAS,CAACE,GAAG,CAACS,MAAJ,CAAWE,KAAZ,CAAT;AACH,GAHD;;AAKA,QAAMC,WAAW,GAAIZ,GAAD,IAAS;AACzBA,IAAAA,GAAG,CAACC,cAAJ;AACAH,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH,GAHD;;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEO,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,gBAA/B;AAAgD,UAAA,IAAI,EAAC,QAArD;AAA8D,UAAA,KAAK,EAAER,MAArE;AAA6E,UAAA,QAAQ,EAAES;AAAvF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEP,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,gBAArB;AAAsC,MAAA,KAAK,EAAE,IAA7C;AAAA,gBACKJ,KAAK,CAACkB,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAY;AAC3B,4BAAO,QAAC,QAAD;AAA0B,UAAA,MAAM,EAAEA;AAAlC,WAAeA,MAAM,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAzCD;;GAAMtB,S;UAEcF,U;;;KAFdE,S;;AA2CN,MAAMuB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHL,IAAAA,OAAO,EAAEK,KAAK,CAACL;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAepB,OAAO,CAACwB,eAAD,EAAkB,IAAlB,CAAP,CAA+BvB,SAA/B,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport MiniCard from './minirecipecard.js';\nimport { Container } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Dashboard = (props) => {\n\n    const history = useHistory();\n    const [search, setSearch] = useState(\" \")\n\n    const logout = (evt) => {\n        evt.preventDefault();\n        localStorage.removeItem('authToken');\n        history.push('/')\n    }\n\n    const navigateFunction = (evt) => {\n        history.push('/form');\n    }\n\n    const searchRecipe = (evt) => {\n        console.log(evt.target.name, evt.target.value);\n        setSearch(evt.target.value);\n    }\n\n    const clearSearch = (evt) => {\n        evt.preventDefault();\n        setSearch(\"\");\n    }\n    return (\n        <div>\n            <div className=\"navigation\">\n                <button className=\"navButton\" onClick={navigateFunction}>Enter New Recipe</button>\n                <div className=\"search\">\n                    <input type=\"text\" placeholder=\"search recipes\" name=\"search\" value={search} onChange={searchRecipe} />\n                    <button>Clear</button>\n                </div>\n                <button className=\"navButton\" onClick={logout}>Logout</button>\n            </div>\n            <Container className=\"card-container\" fluid={true}>\n                {props.recipes.map((recipe) => {\n                    return <MiniCard key={recipe.id} recipe={recipe} />\n                })}\n            </Container>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        recipes: state.recipes,\n    }\n}\n\nexport default connect(mapStateToProps, null)(Dashboard);"]},"metadata":{},"sourceType":"module"}