{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/detailedrecipecard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteRecipe } from '../actions/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailedCard = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  console.log(parseInt(id));\n  const [recipe, setRecipe] = useState([]);\n  useEffect(() => {\n    setRecipe(props.recipes.filter(recipe => recipe.id === parseInt(id)));\n  }, [id, props.recipes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipeCard\",\n    children: [console.log(relRecipe[0]), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navButton\",\n        children: \"Return to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"miniCard\",\n      children: [/*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h3\",\n          children: recipe[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h3\",\n          children: recipe[0].id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardText, {\n          children: [`Recipe By: ${recipe[0].source}`, \"Recipe By: Mom\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: recipe[0].category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"miniCard\",\n      children: [/*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h3\",\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: recipe[0].ingredients.map((ingredient, index) => {\n          return /*#__PURE__*/_jsxDEV(CardText, {\n            children: ingredient.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"miniCard\",\n      children: [/*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h3\",\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: recipe[0].instructions.map((instruction, index) => {\n          return /*#__PURE__*/_jsxDEV(CardText, {\n            children: instruction.step\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editRecipe\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailedCard, \"vFJXVcaZyvP8DWYHBLyNis5Dd5o=\", false, function () {\n  return [useParams];\n});\n\n_c = DetailedCard;\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteRecipe: id => dispatch(deleteRecipe(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailedCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedCard\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/detailedrecipecard.js"],"names":["React","useEffect","useState","Card","CardBody","CardTitle","CardText","Link","useParams","connect","deleteRecipe","DetailedCard","props","id","console","log","parseInt","recipe","setRecipe","recipes","filter","relRecipe","title","source","category","ingredients","map","ingredient","index","name","instructions","instruction","step","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteRecipe } from '../actions/index.js';\n\nconst DetailedCard = (props) => {\n    const { id } = useParams();\n    console.log(parseInt(id));\n\n    const [recipe, setRecipe] = useState([]);\n\n    useEffect(() => {\n        setRecipe(props.recipes.filter((recipe) => recipe.id === parseInt(id)));\n    }, [id, props.recipes])\n\n    return (\n        <div className=\"recipeCard\">\n            {console.log(relRecipe[0])}\n            <Link to=\"/dashboard\">\n                <button className=\"navButton\">Return to Dashboard</button>\n            </Link>\n            <Card className=\"miniCard\">\n                <CardBody>\n                    <CardTitle tag=\"h3\">{recipe[0].title}</CardTitle>\n                    <CardTitle tag=\"h3\">{recipe[0].id}</CardTitle>\n                </CardBody>\n                <CardBody>\n                    <CardText>{`Recipe By: ${recipe[0].source}`}Recipe By: Mom</CardText>\n                    <CardText>{recipe[0].category}</CardText>\n                </CardBody>\n            </Card>\n            <Card className=\"miniCard\">\n                <CardBody>\n                    <CardTitle tag=\"h3\">Ingredients</CardTitle>\n                </CardBody>\n                <CardBody>\n                    {\n                        recipe[0].ingredients.map((ingredient, index) => {\n                            return <CardText key={index}>{ingredient.name}</CardText>\n                        })\n                    }\n                </CardBody>\n            </Card>\n            <Card className=\"miniCard\">\n                <CardBody>\n                    <CardTitle tag=\"h3\">Instructions</CardTitle>\n                </CardBody>\n                <CardBody>\n                    {\n                        recipe[0].instructions.map((instruction, index) => {\n                            return <CardText key={index}>{instruction.step}</CardText>\n                        })\n                    }\n                </CardBody>\n            </Card>\n            <div className=\"editRecipe\">\n                <button>Edit Recipe</button>\n                <button>Delete Recipe</button>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        recipes: state.recipes\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteRecipe: (id) => dispatch(deleteRecipe(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailedCard);"]},"metadata":{},"sourceType":"module"}