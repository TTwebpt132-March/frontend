{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/editForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container } from 'reactstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n\n  const navigateFunction = evt => {\n    history.push('/dashboard');\n  };\n\n  const [recipe, setRecipe] = useState([]);\n  useEffect(() => {\n    setRecipe(props.recipes.filter(recipe => recipe.id === parseInt(id)));\n  }, [id, props.recipes]);\n\n  if (relRecipe.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Recipe....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navButton\",\n      onClick: navigateFunction,\n      children: \"Return to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"CsLWH6SSZDdyHAXm5SmIBO2VDpA=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditForm;\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nexport default connect(mapStateToProps, null)(EditForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/editForm.js"],"names":["React","useState","Container","useHistory","useParams","connect","EditForm","props","history","id","console","log","navigateFunction","evt","push","recipe","setRecipe","useEffect","recipes","filter","parseInt","relRecipe","length","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AAEA,QAAMG,gBAAgB,GAAIC,GAAD,IAAS;AAC9BL,IAAAA,OAAO,CAACM,IAAR,CAAa,YAAb;AACH,GAFD;;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AAEAgB,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,SAAS,CAACT,KAAK,CAACW,OAAN,CAAcC,MAAd,CAAsBJ,MAAD,IAAYA,MAAM,CAACN,EAAP,KAAcW,QAAQ,CAACX,EAAD,CAAvD,CAAD,CAAT;AACH,GAFQ,EAEN,CAACA,EAAD,EAAKF,KAAK,CAACW,OAAX,CAFM,CAAT;;AAIA,MAAIG,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,SAAD;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEV,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzBD;;GAAMN,Q;UACcH,U,EAEDC,S;;;KAHbE,Q;;AA2BN,MAAMiB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHN,IAAAA,OAAO,EAAEM,KAAK,CAACN;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAACkB,eAAD,EAAkB,IAAlB,CAAP,CAA+BjB,QAA/B,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Container } from 'reactstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst EditForm = (props) => {\n    const history = useHistory();\n\n    const { id } = useParams();\n    console.log(id);\n\n    const navigateFunction = (evt) => {\n        history.push('/dashboard');\n    }\n\n    const [recipe, setRecipe] = useState([]);\n\n    useEffect(() => {\n        setRecipe(props.recipes.filter((recipe) => recipe.id === parseInt(id)));\n    }, [id, props.recipes])\n\n    if (relRecipe.length === 0) {\n        return <div>Loading Recipe....</div>\n    }\n\n    return (\n        <Container>\n            <button className=\"navButton\" onClick={navigateFunction}>Return to Dashboard</button>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        recipes: state.recipes\n    }\n}\n\nexport default connect(mapStateToProps, null)(EditForm);"]},"metadata":{},"sourceType":"module"}