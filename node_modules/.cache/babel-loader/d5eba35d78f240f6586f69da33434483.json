{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // Create a schema to create a submitting criteria for our sign up\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().required('email is required'),\n  username: yup.string().required('username is required'),\n  password: yup.string().required('password is required')\n});\n\nconst Signup = props => {\n  _s();\n\n  //Use State to take all our data in\n  const initialFormValues = {\n    email: '',\n    username: '',\n    password: ''\n  };\n  const [formData, setFormData] = useState(initialFormValues);\n  const [errors, setErrors] = useState({\n    email: '',\n    username: '',\n    password: ''\n  });\n  const [disabled, setDisabled] = useState(true); // create a onChange handler for inputs to recognize change going on\n  //    if(/^[a-zA-Z]+$/.test(event.target.value)){          <=== was originally used for names to only input alphabet only (no 1-0) \n  //                                                              got rid of it because it didn't delete the first letter, and didn't recognize spaces\n  //   }\n\n  const onInputChange = event => {\n    console.log(event.target.name, event.target.value);\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  useEffect(() => {\n    schema.isValid(formData).then(valid => setDisabled(!valid));\n  }, [formData]); // create a submit function too submit our date once its all put in\n\n  const submit = function (event) {\n    event.preventDefault();\n    axios.post(\"https://recipeslambda.herokuapp.com/api/auth/register\", formData).then(res => {\n      console.log(res.data);\n    });\n  }; //create a helper function too confirm if \"comfirm password\" === \"password\"\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signupForm\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navButton\",\n        children: \"Return to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sign Up Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"JohnDoe@John.com\",\n          type: \"text\",\n          name: \"email\",\n          id: \"email\",\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \" Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"JohnDoe1234\",\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \" Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Password1234\",\n          type: \"text\",\n          name: \"password\",\n          id: \"password\",\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"MIBSINN56cUccm12P4XnretjxjU=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/signup.js"],"names":["React","useState","useEffect","yup","axios","Link","schema","object","email","string","required","username","password","Signup","props","initialFormValues","formData","setFormData","errors","setErrors","disabled","setDisabled","onInputChange","event","console","log","target","name","value","isValid","then","valid","submit","preventDefault","post","res","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\n\n// Create a schema to create a submitting criteria for our sign up\n\nconst schema = yup.object({\n    email: yup.string().required('email is required'),\n    username: yup.string().required('username is required'),\n    password: yup.string().required('password is required'),\n})\nconst Signup = (props) => {\n    //Use State to take all our data in\n\n    const initialFormValues = {\n        email: '',\n        username: '',\n        password: ''\n    }\n\n\n    const [formData, setFormData] = useState(initialFormValues)\n    const [errors, setErrors] = useState({ email: '', username: '', password: '' })\n    const [disabled, setDisabled] = useState(true);\n\n    // create a onChange handler for inputs to recognize change going on\n\n\n    //    if(/^[a-zA-Z]+$/.test(event.target.value)){          <=== was originally used for names to only input alphabet only (no 1-0) \n    //                                                              got rid of it because it didn't delete the first letter, and didn't recognize spaces\n    //   }\n    const onInputChange = event => {\n        console.log(event.target.name, event.target.value)\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    useEffect(() => {\n        schema.isValid(formData).then(valid => setDisabled(!valid))\n    }, [formData])\n    // create a submit function too submit our date once its all put in\n\n    const submit = function (event) {\n        event.preventDefault()\n        axios.post(\"https://recipeslambda.herokuapp.com/api/auth/register\", formData)\n            .then((res) => {\n                console.log(res.data);\n            })\n    }\n\n    //create a helper function too confirm if \"comfirm password\" === \"password\"\n    return (\n        <div className=\"signupForm\" >\n            <Link to=\"/dashboard\">\n                <button className=\"navButton\">Return to Dashboard</button>\n            </Link>\n            <h3>Sign Up Form</h3>\n            <form className=\"form\" onSubmit={submit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\"> Email: </label>\n                    <input placeholder=\"JohnDoe@John.com\" type=\"text\" name=\"email\" id=\"email\" onChange={onInputChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\"> Username: </label>\n                    <input placeholder=\"JohnDoe1234\" type=\"text\" name=\"username\" id=\"username\" onChange={onInputChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\"> Password: </label>\n                    <input placeholder=\"Password1234\" type=\"text\" name=\"password\" id=\"password\" onChange={onInputChange} />\n                </div>\n                <button>Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}