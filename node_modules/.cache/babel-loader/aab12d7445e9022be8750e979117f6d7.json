{"ast":null,"code":"import { FETCH_REQUEST_PROGRESS, FETCH_REQUEST_SUCCESS, FETCH_REQUEST_FAILURE, SET_ERROR_MESSAGE, SEARCH_RECIPE, CLEAR_SEARCH, EMPTY_STATE } from '../actions/index.js';\nconst initialState = {\n  recipes: [],\n  loading: false,\n  error: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_REQUEST_PROGRESS:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_REQUEST_SUCCESS:\n      return { ...state,\n        loading: false,\n        recipes: action.payload,\n        error: ''\n      };\n\n    case FETCH_REQUEST_FAILURE:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    /*\n    case ADD_NEW_RECIPE:\n        return { ...state, loading: false, error: '', recipes: [...state.recipes, action.payload] }\n    */\n\n    /*\n    case EDIT_RECIPE: {\n        const index = state.recipes.findIndex((recipe) => recipe.id === action.payload.id);\n        const newArray = [...state.recipes];\n        newArray[index] = action.payload;\n        return {\n            ...state, recipes: newArray,\n        }\n    }\n    */\n\n    case SET_ERROR_MESSAGE:\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case SEARCH_RECIPE:\n      return { ...state,\n        loading: false,\n        recipes: state.recipes.filter(recipe => {\n          return recipe.category.filter(cat => cat.type.toLowerCase() === action.payload.toLowerCase()).length > 0 ? recipe : '';\n        })\n      };\n\n    /*recipe.title.toLowerCase() === action.payload.toLowerCase() */\n\n    /*\n    case CLEAR_SEARCH:\n        return { ...state, loading: false, recipes: [...fakeRecipeData] };\n    */\n\n    case EMPTY_STATE:\n      return { ...state,\n        loading: true,\n        recipes: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/reducers/index.js"],"names":["FETCH_REQUEST_PROGRESS","FETCH_REQUEST_SUCCESS","FETCH_REQUEST_FAILURE","SET_ERROR_MESSAGE","SEARCH_RECIPE","CLEAR_SEARCH","EMPTY_STATE","initialState","recipes","loading","error","reducer","state","action","type","payload","filter","recipe","category","cat","toLowerCase","length"],"mappings":"AAAA,SACIA,sBADJ,EAEIC,qBAFJ,EAGIC,qBAHJ,EAIIC,iBAJJ,EAKIC,aALJ,EAMIC,YANJ,EAOIC,WAPJ,QAQO,qBARP;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,sBAAL;AACI,aAAO,EAAE,GAAGY,KAAL;AAAYH,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACJ,SAAKR,qBAAL;AACI,aAAO,EAAE,GAAGW,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAA5C;AAAqDL,QAAAA,KAAK,EAAE;AAA5D,OAAP;;AACJ,SAAKR,qBAAL;AACI,aAAO,EAAE,GAAGU,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAA1C,OAAP;;AACJ;AACR;AACA;AACA;;AAEQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,SAAKZ,iBAAL;AACI,aAAO,EAAE,GAAGS,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAA1C,OAAP;;AACJ,SAAKX,aAAL;AACI,aAAO,EACH,GAAGQ,KADA;AACOH,QAAAA,OAAO,EAAE,KADhB;AAEHD,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,CAAcQ,MAAd,CAAsBC,MAAD,IAAY;AACtC,iBAAQA,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAwBG,GAAD,IAASA,GAAG,CAACL,IAAJ,CAASM,WAAT,OAA2BP,MAAM,CAACE,OAAP,CAAeK,WAAf,EAA3D,CAAD,CAA2FC,MAA3F,GAAoG,CAApG,GAAwGJ,MAAxG,GAAiH,EAAxH;AACH,SAFQ;AAFN,OAAP;;AAMJ;;AACA;AACR;AACA;AACA;;AACQ,SAAKX,WAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAYH,QAAAA,OAAO,EAAE,IAArB;AAA2BD,QAAAA,OAAO,EAAE;AAApC,OAAP;;AACJ;AACI,aAAOI,KAAP;AAvCR;AAyCH,CA1CD;;AA4CA,eAAeD,OAAf","sourcesContent":["import {\n    FETCH_REQUEST_PROGRESS,\n    FETCH_REQUEST_SUCCESS,\n    FETCH_REQUEST_FAILURE,\n    SET_ERROR_MESSAGE,\n    SEARCH_RECIPE,\n    CLEAR_SEARCH,\n    EMPTY_STATE\n} from '../actions/index.js';\n\nconst initialState = {\n    recipes: [],\n    loading: false,\n    error: ''\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_REQUEST_PROGRESS:\n            return { ...state, loading: true }\n        case FETCH_REQUEST_SUCCESS:\n            return { ...state, loading: false, recipes: action.payload, error: '' }\n        case FETCH_REQUEST_FAILURE:\n            return { ...state, loading: false, error: action.payload }\n        /*\n        case ADD_NEW_RECIPE:\n            return { ...state, loading: false, error: '', recipes: [...state.recipes, action.payload] }\n        */\n\n        /*\n        case EDIT_RECIPE: {\n            const index = state.recipes.findIndex((recipe) => recipe.id === action.payload.id);\n            const newArray = [...state.recipes];\n            newArray[index] = action.payload;\n            return {\n                ...state, recipes: newArray,\n            }\n        }\n        */\n        case SET_ERROR_MESSAGE:\n            return { ...state, loading: false, error: action.payload }\n        case SEARCH_RECIPE:\n            return {\n                ...state, loading: false,\n                recipes: state.recipes.filter((recipe) => {\n                    return (recipe.category.filter((cat) => cat.type.toLowerCase() === action.payload.toLowerCase())).length > 0 ? recipe : '';\n                })\n            }\n        /*recipe.title.toLowerCase() === action.payload.toLowerCase() */\n        /*\n        case CLEAR_SEARCH:\n            return { ...state, loading: false, recipes: [...fakeRecipeData] };\n        */\n        case EMPTY_STATE:\n            return { ...state, loading: true, recipes: [] };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}