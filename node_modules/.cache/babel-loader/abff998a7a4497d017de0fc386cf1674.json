{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/recipeform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addRecipe } from '../actions/index.js';\nimport axiosWithAuth from '../Utils/axiosWithAuth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = props => {\n  _s();\n\n  const history = useHistory();\n  const initialFormValues = {\n    title: '',\n    source: '',\n    ingredients: [],\n    category: [],\n    instructions: ''\n  };\n  const [form, setForm] = useState(initialFormValues);\n\n  const addIngredients = () => {\n    setForm({ ...form,\n      ingredients: [...form.ingredients, \"\"]\n    });\n  };\n\n  const addCategory = () => {\n    setForm({ ...form,\n      category: [...form.category, \"\"]\n    });\n  };\n\n  const nonDynamicChange = evt => {\n    console.log(evt.target.name, evt.target.value);\n    setForm({ ...form,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const categoryChange = evt => {\n    console.log(evt.target.name, evt.target.value);\n    const updatedCategory = [...form.category];\n    updatedCategory[evt.target.dataset.idx] = evt.target.value;\n    setForm({ ...form,\n      category: updatedCategory\n    });\n  };\n\n  const ingredientChange = evt => {\n    console.log(evt.target.name, evt.target.value);\n    const updatedIngredients = [...form.ingredients];\n    updatedIngredients[evt.target.dataset.idx] = evt.target.value;\n    setForm({ ...form,\n      ingredients: updatedIngredients\n    });\n  };\n\n  const navigateFunction = evt => {\n    history.push('/dashboard');\n  };\n\n  const formSubmit = evt => {\n    evt.preventDefault();\n    console.log(form);\n    /*\n    axiosWithAuth().post('/api/recipes', form)\n        .then((res) => {\n            console.log(res.data);\n        }).catch((err) => {\n            console.log(err.message);\n        })\n    */\n\n    props.addRecipe(form);\n    setForm(initialFormValues);\n    history.push(\"/dashboard\");\n  };\n\n  const deleteItems = (evt, ind) => {\n    evt.preventDefault();\n    const ingredientList = [...form.ingredients];\n    ingredientList.splice(ind, 1);\n    console.log(ind, evt.target, ingredientList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"themed-container form-container\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navButton\",\n        onClick: navigateFunction,\n        children: \"Return to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"recipeForm\",\n        onSubmit: formSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Enter Recipe:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"recipeTitle\",\n            children: \" Title: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"recipeTitle\",\n            name: \"title\",\n            value: form.title,\n            placeholder: \"Recipe Title\",\n            onChange: nonDynamicChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"recipeSource\",\n            children: \" Source: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"recipeSource\",\n            name: \"source\",\n            value: form.source,\n            placeholder: \"Ex. Grandma, Mom\",\n            onChange: nonDynamicChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), form.ingredients.map((val, idx) => {\n          const ingredientId = `name-${idx}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: ingredientId,\n              children: `Ingredient #${idx + 1}: `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: ingredientId,\n              \"data-idx\": idx,\n              value: form.ingredients[idx],\n              id: ingredientId,\n              placeholder: `Enter Ingredient`,\n              onChange: ingredientChange,\n              className: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evt => deleteItems(evt, idx),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this)]\n          }, `ingredient-${idx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addIngredients,\n          children: \"Add Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), form.category.map((val, idx) => {\n          const categoryId = `name-${idx}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categories form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: categoryId,\n              children: `Category #${idx + 1}: `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: categoryId,\n              placeholder: `Enter Category`,\n              \"data-idx\": idx,\n              value: form.category[idx],\n              id: categoryId,\n              className: \"type\",\n              onChange: categoryChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evt => deleteItems(evt, idx),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this)]\n          }, `category-${idx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCategory,\n          children: \"Add Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"recipeInstructions\",\n            children: \" Instructions: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"recipeInstructions\",\n            name: \"instructions\",\n            value: form.instructions,\n            placeholder: \"input instructions\",\n            onChange: nonDynamicChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecipeForm, \"7pmnRYTAu+Y60TMTvMQ9O6nWnj4=\", false, function () {\n  return [useHistory];\n});\n\n_c = RecipeForm;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addRecipe: obj => dispatch(addRecipe(obj))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(RecipeForm);\n/*\nRecipeForm should have a title, source (ex Grandma), ingredients, instructions, and category (dinner, chicken, dessert, pasta)\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/recipeform.js"],"names":["React","useState","Container","useHistory","connect","addRecipe","axiosWithAuth","RecipeForm","props","history","initialFormValues","title","source","ingredients","category","instructions","form","setForm","addIngredients","addCategory","nonDynamicChange","evt","console","log","target","name","value","categoryChange","updatedCategory","dataset","idx","ingredientChange","updatedIngredients","navigateFunction","push","formSubmit","preventDefault","deleteItems","ind","ingredientList","splice","map","val","ingredientId","categoryId","mapDispatchToProps","dispatch","obj"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addRecipe } from '../actions/index.js';\nimport axiosWithAuth from '../Utils/axiosWithAuth.js';\n\nconst RecipeForm = (props) => {\n    const history = useHistory();\n\n    const initialFormValues = {\n        title: '',\n        source: '',\n        ingredients: [],\n        category: [],\n        instructions: ''\n    }\n\n    const [form, setForm] = useState(initialFormValues)\n\n    const addIngredients = () => {\n        setForm({ ...form, ingredients: [...form.ingredients, \"\"] })\n    }\n\n    const addCategory = () => {\n        setForm({ ...form, category: [...form.category, \"\"] })\n    }\n\n    const nonDynamicChange = (evt) => {\n        console.log(evt.target.name, evt.target.value)\n        setForm({ ...form, [evt.target.name]: evt.target.value })\n    }\n\n    const categoryChange = (evt) => {\n        console.log(evt.target.name, evt.target.value)\n        const updatedCategory = [...form.category];\n        updatedCategory[evt.target.dataset.idx] = evt.target.value;\n        setForm({ ...form, category: updatedCategory });\n    }\n\n    const ingredientChange = (evt) => {\n        console.log(evt.target.name, evt.target.value)\n        const updatedIngredients = [...form.ingredients];\n        updatedIngredients[evt.target.dataset.idx] = evt.target.value;\n        setForm({ ...form, ingredients: updatedIngredients });\n    }\n\n    const navigateFunction = (evt) => {\n        history.push('/dashboard');\n    }\n\n    const formSubmit = (evt) => {\n        evt.preventDefault();\n        console.log(form)\n        /*\n        axiosWithAuth().post('/api/recipes', form)\n            .then((res) => {\n                console.log(res.data);\n            }).catch((err) => {\n                console.log(err.message);\n            })\n        */\n        props.addRecipe(form);\n        setForm(initialFormValues);\n        history.push(\"/dashboard\");\n    }\n\n    const deleteItems = (evt, ind) => {\n        evt.preventDefault();\n        const ingredientList = [...form.ingredients];\n        ingredientList.splice(ind, 1);\n        console.log(ind, evt.target, ingredientList)\n    }\n\n    return (\n        <div>\n            <Container className=\"themed-container form-container\" fluid={true}>\n                <button className=\"navButton\" onClick={navigateFunction}>Return to Dashboard</button>\n                <form className=\"recipeForm\" onSubmit={formSubmit}>\n                    <h3>Enter Recipe:</h3>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"recipeTitle\"> Title: </label>\n                        <input\n                            id=\"recipeTitle\"\n                            name=\"title\"\n                            value={form.title}\n                            placeholder=\"Recipe Title\"\n                            onChange={nonDynamicChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"recipeSource\"> Source: </label>\n                        <input\n                            id=\"recipeSource\"\n                            name=\"source\"\n                            value={form.source}\n                            placeholder=\"Ex. Grandma, Mom\"\n                            onChange={nonDynamicChange}\n                        />\n                    </div>\n\n                    {\n                        form.ingredients.map((val, idx) => {\n                            const ingredientId = `name-${idx}`;\n                            return (\n                                <div key={`ingredient-${idx}`} className='ingredients form-group'>\n                                    <label htmlFor={ingredientId}>{`Ingredient #${idx + 1}: `}</label>\n                                    <input\n                                        type=\"text\"\n                                        name={ingredientId}\n                                        data-idx={idx}\n                                        value={form.ingredients[idx]}\n                                        id={ingredientId}\n                                        placeholder={`Enter Ingredient`}\n                                        onChange={ingredientChange}\n                                        className=\"name\"\n                                    />\n                                    <button onClick={(evt) => deleteItems(evt, idx)}>Delete</button>\n                                </div>\n                            )\n                        })\n                    }\n                    <button onClick={addIngredients} >Add Ingredients</button>\n                    {\n                        form.category.map((val, idx) => {\n                            const categoryId = `name-${idx}`;\n                            return (\n                                <div key={`category-${idx}`} className=\"categories form-group\">\n                                    <label htmlFor={categoryId}>{`Category #${idx + 1}: `}</label>\n                                    <input\n                                        type=\"text\"\n                                        name={categoryId}\n                                        placeholder={`Enter Category`}\n                                        data-idx={idx}\n                                        value={form.category[idx]}\n                                        id={categoryId}\n                                        className=\"type\"\n                                        onChange={categoryChange}\n                                    />\n                                    <button onClick={(evt) => deleteItems(evt, idx)}>Delete</button>\n                                </div>\n                            )\n                        })\n                    }\n                    <button onClick={addCategory} >Add Categories</button>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"recipeInstructions\"> Instructions: </label>\n                        <textarea\n                            id=\"recipeInstructions\"\n                            name=\"instructions\"\n                            value={form.instructions}\n                            placeholder=\"input instructions\"\n                            onChange={nonDynamicChange}\n                        />\n                    </div>\n                    <button>Submit</button>\n                </form>\n            </Container>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addRecipe: (obj) => dispatch(addRecipe(obj))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(RecipeForm);\n\n/*\nRecipeForm should have a title, source (ex Grandma), ingredients, instructions, and category (dinner, chicken, dessert, pasta)\n*/"]},"metadata":{},"sourceType":"module"}