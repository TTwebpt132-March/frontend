{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/detailedrecipecard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteRecipe } from '../actions/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailedCard = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  console.log(parseInt(id));\n  let relRecipe = \"\";\n  let recipe = {\n    id: 1,\n    title: 'Potato Pie',\n    source: 'Grandma',\n    category: 'Dessert',\n    ingredients: [{\n      name: 'Beef'\n    }, {\n      name: 'Noodles'\n    }, {\n      name: 'Eggs'\n    }],\n    instructions: [{\n      step: 'Boil Water'\n    }, {\n      step: 'Cook The Noodles'\n    }, {\n      step: 'Boil Eggs'\n    }, {\n      step: 'Mix Noodles, Eggs and Beef'\n    }]\n  };\n  useEffect(() => {\n    relRecipe = props.recipes.filter(recipe => recipe.id === parseInt(id));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipeCard\",\n    children: [props.recipes.map(recipe => {\n      if (recipe.id == id) {\n        console.log(recipe);\n      }\n    }), \";\", /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navButton\",\n        children: \"Return to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"miniCard\",\n      children: [/*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h3\",\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h3\",\n          children: recipe.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardText, {\n          children: [`Recipe By: ${recipe.source}`, \"Recipe By: Mom\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: recipe.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"miniCard\",\n      children: [/*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h3\",\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: recipe.ingredients.map((ingredient, index) => {\n          return /*#__PURE__*/_jsxDEV(CardText, {\n            children: ingredient.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"miniCard\",\n      children: [/*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h3\",\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: recipe.instructions.map((instruction, index) => {\n          return /*#__PURE__*/_jsxDEV(CardText, {\n            children: instruction.step\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editRecipe\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailedCard, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = DetailedCard;\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteRecipe: id => dispatch(deleteRecipe(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailedCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedCard\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/detailedrecipecard.js"],"names":["React","useEffect","Card","CardBody","CardTitle","CardText","Link","useParams","connect","deleteRecipe","DetailedCard","props","id","console","log","parseInt","relRecipe","recipe","title","source","category","ingredients","name","instructions","step","recipes","filter","map","ingredient","index","instruction","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteRecipe } from '../actions/index.js';\n\nconst DetailedCard = (props) => {\n    const { id } = useParams();\n    console.log(parseInt(id));\n\n    let relRecipe = \"\";\n    let recipe = {\n        id: 1,\n        title: 'Potato Pie',\n        source: 'Grandma',\n        category: 'Dessert',\n        ingredients: [{ name: 'Beef' }, { name: 'Noodles' }, { name: 'Eggs' }],\n        instructions: [{ step: 'Boil Water' }, { step: 'Cook The Noodles' }, { step: 'Boil Eggs' }, { step: 'Mix Noodles, Eggs and Beef' }]\n    }\n\n    useEffect(() => {\n        relRecipe = props.recipes.filter((recipe) => recipe.id === parseInt(id));\n    })\n\n    return (\n        <div className=\"recipeCard\">\n            {props.recipes.map((recipe) => {\n                if (recipe.id == id) {\n                    console.log(recipe);\n                }\n            })};\n            <Link to=\"/dashboard\">\n                <button className=\"navButton\">Return to Dashboard</button>\n            </Link>\n            <Card className=\"miniCard\">\n                <CardBody>\n                    <CardTitle tag=\"h3\">{recipe.title}</CardTitle>\n                    <CardTitle tag=\"h3\">{recipe.id}</CardTitle>\n                </CardBody>\n                <CardBody>\n                    <CardText>{`Recipe By: ${recipe.source}`}Recipe By: Mom</CardText>\n                    <CardText>{recipe.category}</CardText>\n                </CardBody>\n            </Card>\n            <Card className=\"miniCard\">\n                <CardBody>\n                    <CardTitle tag=\"h3\">Ingredients</CardTitle>\n                </CardBody>\n                <CardBody>\n                    {\n                        recipe.ingredients.map((ingredient, index) => {\n                            return <CardText key={index}>{ingredient.name}</CardText>\n                        })\n                    }\n                </CardBody>\n            </Card>\n            <Card className=\"miniCard\">\n                <CardBody>\n                    <CardTitle tag=\"h3\">Instructions</CardTitle>\n                </CardBody>\n                <CardBody>\n                    {\n                        recipe.instructions.map((instruction, index) => {\n                            return <CardText key={index}>{instruction.step}</CardText>\n                        })\n                    }\n                </CardBody>\n            </Card>\n            <div className=\"editRecipe\">\n                <button>Edit Recipe</button>\n                <button>Delete Recipe</button>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        recipes: state.recipes\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteRecipe: (id) => dispatch(deleteRecipe(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailedCard);"]},"metadata":{},"sourceType":"module"}