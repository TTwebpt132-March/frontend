{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/editForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'reactstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n\n  const navigateFunction = evt => {\n    history.push('/dashboard');\n  };\n\n  const [recipe, setRecipe] = useState([]);\n  useEffect(() => {\n    setRecipe(props.recipes.filter(recipe => recipe.id === parseInt(id)));\n  }, [id, props.recipes]);\n\n  if (recipe.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Fetching Recipe Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  console.log(recipe);\n  const ingredientList = recipe[0].ingredients;\n  console.log(ingredientList);\n  const categoryList = recipe[0].category;\n  console.log(categoryList);\n  const [form, setForm] = useState({\n    title: recipe[0].title,\n    source: recipe[0].source,\n    ingredients: recipe[0].ingredients,\n    category: recipe[0].category,\n    instructions: recipe[0].instructions\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navButton\",\n      onClick: navigateFunction,\n      children: \"Return to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"jFEuPsjlBd4frFLf+6fL9O4HbTY=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditForm;\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nexport default connect(mapStateToProps, null)(EditForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/editForm.js"],"names":["React","useState","useEffect","Container","useHistory","useParams","connect","EditForm","props","history","id","console","log","navigateFunction","evt","push","recipe","setRecipe","recipes","filter","parseInt","length","ingredientList","ingredients","categoryList","category","form","setForm","title","source","instructions","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AAEA,QAAMG,gBAAgB,GAAIC,GAAD,IAAS;AAC9BL,IAAAA,OAAO,CAACM,IAAR,CAAa,YAAb;AACH,GAFD;;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,SAAS,CAACT,KAAK,CAACU,OAAN,CAAcC,MAAd,CAAsBH,MAAD,IAAYA,MAAM,CAACN,EAAP,KAAcU,QAAQ,CAACV,EAAD,CAAvD,CAAD,CAAT;AACH,GAFQ,EAEN,CAACA,EAAD,EAAKF,KAAK,CAACU,OAAX,CAFM,CAAT;;AAIA,MAAIF,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEDV,EAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AAEA,QAAMM,cAAc,GAAGN,MAAM,CAAC,CAAD,CAAN,CAAUO,WAAjC;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYU,cAAZ;AAEA,QAAME,YAAY,GAAGR,MAAM,CAAC,CAAD,CAAN,CAAUS,QAA/B;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAYY,YAAZ;AAEA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC;AAC7B2B,IAAAA,KAAK,EAAEZ,MAAM,CAAC,CAAD,CAAN,CAAUY,KADY;AAE7BC,IAAAA,MAAM,EAAEb,MAAM,CAAC,CAAD,CAAN,CAAUa,MAFW;AAG7BN,IAAAA,WAAW,EAAEP,MAAM,CAAC,CAAD,CAAN,CAAUO,WAHM;AAI7BE,IAAAA,QAAQ,EAAET,MAAM,CAAC,CAAD,CAAN,CAAUS,QAJS;AAK7BK,IAAAA,YAAY,EAAEd,MAAM,CAAC,CAAD,CAAN,CAAUc;AALK,GAAD,CAAhC;AAUA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEjB,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3CD;;GAAMN,Q;UACcH,U,EAEDC,S;;;KAHbE,Q;;AA6CN,MAAMwB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHd,IAAAA,OAAO,EAAEc,KAAK,CAACd;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAeZ,OAAO,CAACyB,eAAD,EAAkB,IAAlB,CAAP,CAA+BxB,QAA/B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from 'reactstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst EditForm = (props) => {\n    const history = useHistory();\n\n    const { id } = useParams();\n    console.log(id);\n\n    const navigateFunction = (evt) => {\n        history.push('/dashboard');\n    }\n\n    const [recipe, setRecipe] = useState([]);\n\n    useEffect(() => {\n        setRecipe(props.recipes.filter((recipe) => recipe.id === parseInt(id)));\n    }, [id, props.recipes])\n\n    if (recipe.length === 0) {\n        return <div>Fetching Recipe Details</div>\n    }\n\n    console.log(recipe);\n\n    const ingredientList = recipe[0].ingredients;\n    console.log(ingredientList);\n\n    const categoryList = recipe[0].category;\n    console.log(categoryList);\n\n    const [form, setForm] = useState({\n        title: recipe[0].title,\n        source: recipe[0].source,\n        ingredients: recipe[0].ingredients,\n        category: recipe[0].category,\n        instructions: recipe[0].instructions\n    })\n\n\n\n    return (\n        <Container>\n            <button className=\"navButton\" onClick={navigateFunction}>Return to Dashboard</button>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        recipes: state.recipes\n    }\n}\n\nexport default connect(mapStateToProps, null)(EditForm);"]},"metadata":{},"sourceType":"module"}