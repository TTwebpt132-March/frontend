{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/editForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'reactstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateRecipe } from '../actions/index.js';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = props => {\n  _s();\n\n  const history = useHistory();\n  let decoded = \"\";\n  let token = localStorage.getItem('authToken');\n\n  if (token) {\n    decoded = jwt_decode(token);\n    console.log(decoded);\n  }\n\n  const {\n    id\n  } = useParams();\n  console.log(id);\n\n  const navigateFunction = evt => {\n    history.push('/dashboard');\n  };\n\n  const [form, setForm] = useState({});\n  useEffect(() => {\n    setForm(props.recipes[id]);\n  }, [id, props.recipes]);\n\n  if (Object.keys(form).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Fetching Recipe Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n\n  console.log(form);\n\n  const addIngredients = () => {\n    setForm({ ...form,\n      recipe_ingredients: [...form.recipe_ingredients, \"\"]\n    });\n  };\n\n  const addCategory = () => {\n    setForm({ ...form,\n      recipe_category: [...form.recipe_category, \"\"]\n    });\n  };\n\n  const nonDynamicChange = evt => {\n    console.log(evt.target.name, evt.target.value);\n    setForm({ ...form,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const categoryChange = evt => {\n    console.log(evt.target.name, evt.target.value);\n    const updatedCategory = [...form.recipe_category];\n    updatedCategory[evt.target.dataset.idx] = evt.target.value;\n    setForm({ ...form,\n      recipe_category: updatedCategory\n    });\n  };\n\n  const ingredientChange = evt => {\n    console.log(evt.target.name, evt.target.value);\n    const updatedIngredients = [...form.recipe_ingredients];\n    updatedIngredients[evt.target.dataset.idx] = evt.target.value;\n    setForm({ ...form,\n      recipe_ingredients: updatedIngredients\n    });\n  };\n\n  const formSubmit = evt => {\n    evt.preventDefault();\n    console.log(form);\n    props.updateRecipe(form.id, form, decoded.userID);\n    history.push('/dashboard');\n  };\n\n  const deleteIngredients = (evt, ind) => {\n    evt.preventDefault();\n    const ingredientList = [...form.recipe_ingredients];\n    ingredientList.splice(ind, 1);\n    setForm({ ...form,\n      recipe_ingredients: ingredientList\n    });\n  };\n\n  const deleteCategories = (evt, ind) => {\n    evt.preventDefault();\n    const categoryList = [...form.recipe_category];\n    categoryList.splice(ind, 1);\n    setForm({ ...form,\n      recipe_category: categoryList\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navButton\",\n      onClick: navigateFunction,\n      children: \"Return to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"recipeForm\",\n      onSubmit: formSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Recipe:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeTitle\",\n          children: \" Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"recipeTitle\",\n          name: \"title\",\n          value: form.title,\n          placeholder: \"Recipe Title\",\n          onChange: nonDynamicChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeSource\",\n          children: \" Source: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"recipeSource\",\n          name: \"source\",\n          value: form.recipe_source,\n          placeholder: \"Ex. Grandma, Mom\",\n          onChange: nonDynamicChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), form.recipe_ingredients.map((val, idx) => {\n        const ingredientId = `name-${idx}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: ingredientId,\n            children: `Ingredient #${idx + 1}: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: ingredientId,\n            \"data-idx\": idx,\n            value: form.recipe_ingredients[idx],\n            id: ingredientId,\n            placeholder: `Enter Ingredient`,\n            onChange: ingredientChange,\n            className: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: evt => deleteIngredients(evt, idx),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this)]\n        }, `ingredient-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add Ingredients\",\n        onClick: addIngredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), form.recipe_category.map((val, idx) => {\n        const categoryId = `name-${idx}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categories form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: categoryId,\n            children: `Category #${idx + 1}: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: categoryId,\n            placeholder: `Enter Category`,\n            \"data-idx\": idx,\n            value: form.recipe_category[idx],\n            id: categoryId,\n            className: \"type\",\n            onChange: categoryChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: evt => deleteCategories(evt, idx),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this)]\n        }, `category-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add Categories\",\n        onClick: addCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeInstructions\",\n          children: \" Instructions: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"recipeInstructions\",\n          name: \"instructions\",\n          value: form.recipe_instructions,\n          placeholder: \"input instructions\",\n          onChange: nonDynamicChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"VQSuw4hqKapsz+drD3qaKeSX1H0=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditForm;\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateRecipe: (recipeId, obj, user_id) => dispatch(updateRecipe(recipeId, obj, user_id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/editForm.js"],"names":["React","useState","useEffect","Container","useHistory","useParams","connect","updateRecipe","jwt_decode","EditForm","props","history","decoded","token","localStorage","getItem","console","log","id","navigateFunction","evt","push","form","setForm","recipes","Object","keys","length","addIngredients","recipe_ingredients","addCategory","recipe_category","nonDynamicChange","target","name","value","categoryChange","updatedCategory","dataset","idx","ingredientChange","updatedIngredients","formSubmit","preventDefault","userID","deleteIngredients","ind","ingredientList","splice","deleteCategories","categoryList","title","recipe_source","map","val","ingredientId","categoryId","recipe_instructions","mapStateToProps","state","mapDispatchToProps","dispatch","recipeId","obj","user_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from 'reactstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateRecipe } from '../actions/index.js';\nimport jwt_decode from 'jwt-decode';\n\nconst EditForm = (props) => {\n    const history = useHistory();\n\n    let decoded = \"\"\n    let token = localStorage.getItem('authToken');\n    if (token) {\n        decoded = jwt_decode(token);\n        console.log(decoded);\n    }\n\n    const { id } = useParams();\n    console.log(id);\n\n    const navigateFunction = (evt) => {\n        history.push('/dashboard');\n    }\n\n    const [form, setForm] = useState({})\n\n    useEffect(() => {\n        setForm(props.recipes[id]);\n    }, [id, props.recipes])\n\n\n    if (Object.keys(form).length === 0) {\n        return <div>Fetching Recipe Details</div>\n    }\n\n    console.log(form);\n\n    const addIngredients = () => {\n        setForm({ ...form, recipe_ingredients: [...form.recipe_ingredients, \"\"] })\n    }\n\n    const addCategory = () => {\n        setForm({ ...form, recipe_category: [...form.recipe_category, \"\"] })\n    }\n\n    const nonDynamicChange = (evt) => {\n        console.log(evt.target.name, evt.target.value)\n        setForm({ ...form, [evt.target.name]: evt.target.value })\n    }\n\n    const categoryChange = (evt) => {\n        console.log(evt.target.name, evt.target.value)\n        const updatedCategory = [...form.recipe_category];\n        updatedCategory[evt.target.dataset.idx] = evt.target.value;\n        setForm({ ...form, recipe_category: updatedCategory });\n    }\n\n    const ingredientChange = (evt) => {\n        console.log(evt.target.name, evt.target.value)\n        const updatedIngredients = [...form.recipe_ingredients];\n        updatedIngredients[evt.target.dataset.idx] = evt.target.value;\n        setForm({ ...form, recipe_ingredients: updatedIngredients });\n    }\n\n    const formSubmit = (evt) => {\n        evt.preventDefault();\n        console.log(form)\n        props.updateRecipe(form.id, form, decoded.userID);\n        history.push('/dashboard');\n    }\n\n    const deleteIngredients = (evt, ind) => {\n        evt.preventDefault();\n        const ingredientList = [...form.recipe_ingredients];\n        ingredientList.splice(ind, 1);\n        setForm({ ...form, recipe_ingredients: ingredientList });\n    }\n\n    const deleteCategories = (evt, ind) => {\n        evt.preventDefault();\n        const categoryList = [...form.recipe_category];\n        categoryList.splice(ind, 1);\n        setForm({ ...form, recipe_category: categoryList });\n    }\n\n    return (\n        <Container>\n            <button className=\"navButton\" onClick={navigateFunction}>Return to Dashboard</button>\n            <form className=\"recipeForm\" onSubmit={formSubmit}>\n                <h3>Edit Recipe:</h3>\n                <div className=\"form-group\">\n                    <label htmlFor=\"recipeTitle\"> Title: </label>\n                    <input\n                        id=\"recipeTitle\"\n                        name=\"title\"\n                        value={form.title}\n                        placeholder=\"Recipe Title\"\n                        onChange={nonDynamicChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"recipeSource\"> Source: </label>\n                    <input\n                        id=\"recipeSource\"\n                        name=\"source\"\n                        value={form.recipe_source}\n                        placeholder=\"Ex. Grandma, Mom\"\n                        onChange={nonDynamicChange}\n                    />\n                </div>\n\n                {\n                    form.recipe_ingredients.map((val, idx) => {\n                        const ingredientId = `name-${idx}`;\n                        return (\n                            <div key={`ingredient-${idx}`} className='ingredients form-group'>\n                                <label htmlFor={ingredientId}>{`Ingredient #${idx + 1}: `}</label>\n                                <input\n                                    type=\"text\"\n                                    name={ingredientId}\n                                    data-idx={idx}\n                                    value={form.recipe_ingredients[idx]}\n                                    id={ingredientId}\n                                    placeholder={`Enter Ingredient`}\n                                    onChange={ingredientChange}\n                                    className=\"name\"\n                                />\n                                <button onClick={(evt) => deleteIngredients(evt, idx)}>Delete</button>\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"button\" value=\"Add Ingredients\" onClick={addIngredients} />\n                {\n                    form.recipe_category.map((val, idx) => {\n                        const categoryId = `name-${idx}`;\n                        return (\n                            <div key={`category-${idx}`} className=\"categories form-group\">\n                                <label htmlFor={categoryId}>{`Category #${idx + 1}: `}</label>\n                                <input\n                                    type=\"text\"\n                                    name={categoryId}\n                                    placeholder={`Enter Category`}\n                                    data-idx={idx}\n                                    value={form.recipe_category[idx]}\n                                    id={categoryId}\n                                    className=\"type\"\n                                    onChange={categoryChange}\n                                />\n                                <button onClick={(evt) => deleteCategories(evt, idx)}>Delete</button>\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"button\" value=\"Add Categories\" onClick={addCategory} />\n                <div className=\"form-group\">\n                    <label htmlFor=\"recipeInstructions\"> Instructions: </label>\n                    <textarea\n                        id=\"recipeInstructions\"\n                        name=\"instructions\"\n                        value={form.recipe_instructions}\n                        placeholder=\"input instructions\"\n                        onChange={nonDynamicChange}\n                    />\n                </div>\n                <button>Update Changes</button>\n            </form>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        recipes: state.recipes\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateRecipe: (recipeId, obj, user_id) => dispatch(updateRecipe(recipeId, obj, user_id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);"]},"metadata":{},"sourceType":"module"}