{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport MiniCard from './minirecipecard.js';\nimport { Container } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Search from \"../Components/search.js\";\nimport axiosWithAuth from '../Utils/axiosWithAuth';\nimport { fetchRecipes } from '../actions/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = props => {\n  _s();\n\n  const {\n    fetchRecipes,\n    recipes,\n    loading\n  } = props;\n  const history = useHistory();\n\n  const logout = evt => {\n    evt.preventDefault();\n    localStorage.removeItem('authToken');\n    history.push('/');\n  };\n\n  const navigateFunction = evt => {\n    history.push('/form');\n  };\n\n  useEffect(() => {\n    ///api/users/2/recipes - User Specific Recipes\n    fetchRecipes();\n  }, [fetchRecipes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navButton\",\n        onClick: navigateFunction,\n        children: \"Enter New Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navButton\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"card-container\",\n      fluid: true,\n      children: props.recipes && props.recipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(MiniCard, {\n          recipe: recipe\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    recipes: state.recipes,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchRecipes: () => dispatch(fetchRecipes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/dashboard.js"],"names":["React","useEffect","MiniCard","Container","useHistory","connect","Search","axiosWithAuth","fetchRecipes","Dashboard","props","recipes","loading","history","logout","evt","preventDefault","localStorage","removeItem","push","navigateFunction","map","recipe","id","mapStateToProps","state","error","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,YAAT,QAA6B,qBAA7B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAM;AAAEF,IAAAA,YAAF;AAAgBG,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAqCF,KAA3C;AAEA,QAAMG,OAAO,GAAGT,UAAU,EAA1B;;AAEA,QAAMU,MAAM,GAAIC,GAAD,IAAS;AACpBA,IAAAA,GAAG,CAACC,cAAJ;AACAC,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACAL,IAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACH,GAJD;;AAMA,QAAMC,gBAAgB,GAAIL,GAAD,IAAS;AAC9BF,IAAAA,OAAO,CAACM,IAAR,CAAa,OAAb;AACH,GAFD;;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAO,IAAAA,YAAY;AACf,GAHQ,EAGN,CAACA,YAAD,CAHM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEY,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEN,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,gBAArB;AAAsC,MAAA,KAAK,EAAE,IAA7C;AAAA,gBACKJ,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACC,OAAN,CAAcU,GAAd,CAAmBC,MAAD,IAAY;AAC5C,4BAAO,QAAC,QAAD;AAA0B,UAAA,MAAM,EAAEA;AAAlC,WAAeA,MAAM,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFiB;AADtB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnCD;;GAAMd,S;UAIcL,U;;;KAJdK,S;;AAqCN,MAAMe,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHb,IAAAA,OAAO,EAAEa,KAAK,CAACb,OADZ;AAEHD,IAAAA,OAAO,EAAEc,KAAK,CAACd,OAFZ;AAGHe,IAAAA,KAAK,EAAED,KAAK,CAACC;AAHV,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHpB,IAAAA,YAAY,EAAE,MAAMoB,QAAQ,CAACpB,YAAY,EAAb;AADzB,GAAP;AAGH,CAJD;;AAMA,eAAeH,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,SAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport MiniCard from './minirecipecard.js';\nimport { Container } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Search from \"../Components/search.js\";\nimport axiosWithAuth from '../Utils/axiosWithAuth';\nimport { fetchRecipes } from '../actions/index.js';\n\nconst Dashboard = (props) => {\n\n    const { fetchRecipes, recipes, loading } = props;\n\n    const history = useHistory();\n\n    const logout = (evt) => {\n        evt.preventDefault();\n        localStorage.removeItem('authToken');\n        history.push('/')\n    }\n\n    const navigateFunction = (evt) => {\n        history.push('/form');\n    }\n\n    useEffect(() => {\n        ///api/users/2/recipes - User Specific Recipes\n        fetchRecipes();\n    }, [fetchRecipes])\n\n    return (\n        <div className=\"dashboard\">\n            <div className=\"navigation\">\n                <button className=\"navButton\" onClick={navigateFunction}>Enter New Recipe</button>\n                <Search />\n                <button className=\"navButton\" onClick={logout}>Logout</button>\n            </div>\n            <Container className=\"card-container\" fluid={true}>\n                {props.recipes && props.recipes.map((recipe) => {\n                    return <MiniCard key={recipe.id} recipe={recipe} />\n                })}\n            </Container>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        recipes: state.recipes,\n        error: state.error,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchRecipes: () => dispatch(fetchRecipes())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);"]},"metadata":{},"sourceType":"module"}