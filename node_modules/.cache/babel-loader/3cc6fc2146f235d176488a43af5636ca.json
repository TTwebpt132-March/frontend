{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as yup from 'yup';\nimport axios from 'axios'; //structuring my form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  email: \"\",\n  password: \"\"\n};\nconst initialFormErrors = {\n  email: \"\",\n  password: \"\"\n};\nconst initialDisabled = true; // formSchema for validation\n\nconst validationSchema = yup.object({\n  email: yup.string().required('username is required'),\n  password: yup.string().min(8, 'Password must be 8 characters long').required('Password is required, please fill out.')\n});\n\nconst Login = props => {\n  _s();\n\n  //states\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled); //input handlers\n\n  const history = useHistory();\n\n  const setFormErrors = (name, value) => {\n    yup.reach(validationSchema, name).validate(value).then(() => setErrors({ ...formErrors,\n      [name]: ''\n    })).catch(err => {\n      setErrors({ ...formErrors,\n        [name]: err.errors\n      });\n    });\n  };\n\n  const change = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    console.log(name, value);\n    setFormErrors(name, value);\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    validationSchema.isValid(formValues).then(valid => setDisabled(!valid));\n  }, [formValues]);\n\n  const submit = evt => {\n    evt.preventDefault();\n    axios.post(\"https://reqres.in/api/login\", formValues).then(res => {\n      console.log(res.data.token);\n      localStorage.setItem('authToken', res.data.token);\n      history.push('/dashboard');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-container\",\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formValues.email,\n          id: \"username\",\n          onChange: change,\n          name: \"email\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formValues.password,\n          id: \"password\",\n          onChange: change,\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginBtn\",\n        disabled: disabled,\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          className: \"registerLink\",\n          children: \"Don't have an account? Register!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"yNDw1+9icWVUhXRKjX+WNwQTWF0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/login.js"],"names":["React","useState","useEffect","Link","useHistory","yup","axios","initialFormValues","email","password","initialFormErrors","initialDisabled","validationSchema","object","string","required","min","Login","props","formValues","setFormValues","formErrors","setErrors","disabled","setDisabled","history","setFormErrors","name","value","reach","validate","then","catch","err","errors","change","event","target","console","log","isValid","valid","submit","evt","preventDefault","post","res","data","token","localStorage","setItem","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as yup from 'yup';\nimport axios from 'axios';\n//structuring my form\nconst initialFormValues = {\n    email: \"\",\n    password: \"\"\n}\nconst initialFormErrors = {\n    email: \"\",\n    password: \"\"\n}\n\n\nconst initialDisabled = true\n// formSchema for validation\nconst validationSchema = yup.object({\n    email: yup.string()\n        .required('username is required'),\n    password: yup.string()\n        .min(8, 'Password must be 8 characters long')\n        .required('Password is required, please fill out.'),\n})\n\nconst Login = (props) => {\n    //states\n    const [formValues, setFormValues] = useState(initialFormValues)\n    const [formErrors, setErrors] = useState(initialFormErrors)\n    const [disabled, setDisabled] = useState(initialDisabled)\n    //input handlers\n    const history = useHistory();\n\n    const setFormErrors = (name, value) => {\n        yup.reach(validationSchema, name).validate(value)\n            .then(() => setErrors({ ...formErrors, [name]: '' }))\n            .catch(err => {\n                setErrors({ ...formErrors, [name]: err.errors })\n            })\n    }\n\n    const change = event => {\n        const { value, name } = event.target;\n        console.log(name, value);\n        setFormErrors(name, value);\n        setFormValues({ ...formValues, [name]: value });\n    }\n\n    useEffect(() => {\n        validationSchema.isValid(formValues).then(valid => setDisabled(!valid))\n    }, [formValues])\n\n    const submit = (evt) => {\n        evt.preventDefault();\n        axios.post(\"https://reqres.in/api/login\", formValues)\n            .then((res) => {\n                console.log(res.data.token);\n                localStorage.setItem('authToken', res.data.token);\n                history.push('/dashboard');\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    return (\n        <div>\n            <form className='login-container' onSubmit={submit}>\n                <h3>Login</h3>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username: </label>\n                    <input\n                        value={formValues.email}\n                        id=\"username\"\n                        onChange={change}\n                        name='email'\n                        type='text'\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password: </label>\n                    <input\n                        value={formValues.password}\n                        id=\"password\"\n                        onChange={change}\n                        name='password'\n                        type='password'\n                    />\n                </div>\n                <button className='loginBtn' disabled={disabled}> Login </button>\n                <div>\n                    <Link to=\"/signup\" className=\"registerLink\">Don't have an account? Register!</Link>\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}