{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios'; //structuring my form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  username: \"\",\n  password: \"\"\n};\nconst initialFormErrors = {\n  username: \"\",\n  password: \"\"\n};\nconst initialDisabled = true; // formSchema for validation\n\nconst validationSchema = yup.object({\n  username: yup.string().required('username is required'),\n  password: yup.string().min(8, 'Password must be 8 characters long').required('Password is required, please fill out.')\n});\n\nconst Login = props => {\n  _s();\n\n  //states\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled); //input handlers\n\n  const setFormErrors = (name, value) => {\n    yup.reach(validationSchema, name).validate(value).then(() => setErrors({ ...formErrors,\n      [name]: ''\n    })).catch(err => {\n      setErrors({ ...formErrors,\n        [name]: err.errors\n      });\n    });\n  };\n\n  const change = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    console.log(name, value);\n    setFormErrors(name, value);\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    validationSchema.isValid(formValues).then(valid => setDisabled(!valid));\n  }, [formValues]);\n\n  const submit = evt => {\n    evt.preventDefault();\n    const newUser = {\n      username: formValues.username.trim(),\n      password: formValues.password\n    };\n    axios.post;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValues.username,\n        id: \"username\",\n        onChange: change,\n        name: \"username\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValues.password,\n        id: \"password\",\n        onChange: change,\n        name: \"password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginBtn\",\n        disabled: disabled,\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"rhWQmbjZsXHlRV1fu43tGoURxH8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/login.js"],"names":["React","useState","useEffect","yup","axios","initialFormValues","username","password","initialFormErrors","initialDisabled","validationSchema","object","string","required","min","Login","props","formValues","setFormValues","formErrors","setErrors","disabled","setDisabled","setFormErrors","name","value","reach","validate","then","catch","err","errors","change","event","target","console","log","isValid","valid","submit","evt","preventDefault","newUser","trim","post"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport axios from 'axios';\n//structuring my form\nconst initialFormValues = {\n    username: \"\",\n    password: \"\"\n}\nconst initialFormErrors = {\n    username: \"\",\n    password: \"\"\n}\nconst initialDisabled = true\n// formSchema for validation\nconst validationSchema = yup.object({\n    username: yup.string()\n        .required('username is required'),\n    password: yup.string()\n        .min(8, 'Password must be 8 characters long')\n        .required('Password is required, please fill out.'),\n})\n\nconst Login = (props) => {\n    //states\n    const [formValues, setFormValues] = useState(initialFormValues)\n    const [formErrors, setErrors] = useState(initialFormErrors)\n    const [disabled, setDisabled] = useState(initialDisabled)\n    //input handlers\n\n    const setFormErrors = (name, value) => {\n        yup.reach(validationSchema, name).validate(value)\n            .then(() => setErrors({ ...formErrors, [name]: '' }))\n            .catch(err => {\n                setErrors({ ...formErrors, [name]: err.errors })\n            })\n    }\n\n    const change = event => {\n        const { value, name } = event.target;\n        console.log(name, value);\n        setFormErrors(name, value);\n        setFormValues({ ...formValues, [name]: value });\n    }\n\n    useEffect(() => {\n        validationSchema.isValid(formValues).then(valid => setDisabled(!valid))\n    }, [formValues])\n\n    const submit = (evt) => {\n        evt.preventDefault();\n        const newUser = {\n            username: formValues.username.trim(),\n            password: formValues.password,\n        }\n        axios.post\n    }\n\n    return (\n        <div>\n            <form className='login container'>\n                <label htmlFor=\"username\">Username: </label>\n                <input\n                    value={formValues.username}\n                    id=\"username\"\n                    onChange={change}\n                    name='username'\n                    type='text'\n                />\n                <label htmlFor=\"password\">Password: </label>\n                <input\n                    value={formValues.password}\n                    id=\"password\"\n                    onChange={change}\n                    name='password'\n                    type='password'\n                />\n                <button className='loginBtn' disabled={disabled}> Login </button>\n            </form>\n        </div>\n    )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}