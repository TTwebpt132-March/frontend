{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup'; //structuring my form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  username: \"\",\n  password: \"\"\n};\nconst initialFormErrors = {\n  username: \"\",\n  password: \"\"\n};\nconst initialDisabled = true; // formSchema for validation\n\nconst FormSchema = yup.object().shape({\n  username: yup.string().required('username is required'),\n  password: yup.string().min(8, 'Password must be 8 characters long').required('Password is required, please fill out.')\n});\n\nconst Login = props => {\n  _s();\n\n  //states\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled); //input handlers\n\n  const inputChange = (name, value) => {\n    yup.reach({\n      FormSchema,\n      name\n    }).validate(value).then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    FormSchema.isValid(formValues).then(valid => setDisabled(!valid));\n  }, [formValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValues.email,\n        id: \"email\",\n        onChange: inputChange,\n        name: \"email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValues.password,\n        id: \"password\",\n        onChange: inputChange,\n        name: \"password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginBtn\",\n        disabled: disabled,\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"E6hjptUmci94DZY/5Zr2kRydSKg=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/login.js"],"names":["React","useState","useEffect","yup","initialFormValues","username","password","initialFormErrors","initialDisabled","FormSchema","object","shape","string","required","min","Login","props","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","inputChange","name","value","reach","validate","then","catch","err","errors","isValid","valid","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\n//structuring my form\nconst initialFormValues = {\n    username: \"\",\n    password: \"\"\n}\nconst initialFormErrors = {\n    username: \"\",\n    password: \"\"\n}\nconst initialDisabled = true\n// formSchema for validation\nconst FormSchema = yup.object().shape({\n    username: yup.string()\n        .required('username is required'),\n    password: yup.string()\n        .min(8, 'Password must be 8 characters long')\n        .required('Password is required, please fill out.'),\n})\n\nconst Login = (props) => {\n    //states\n    const [formValues, setFormValues] = useState(initialFormValues)\n    const [formErrors, setFormErrors] = useState(initialFormErrors)\n    const [disabled, setDisabled] = useState(initialDisabled)\n    //input handlers\n\n    const inputChange = (name, value) => {\n        yup.reach({ FormSchema, name })\n            .validate(value)\n            .then(() => {\n                setFormErrors({ ...formErrors, [name]: '' })\n            })\n            .catch(err => {\n                setFormErrors({ ...formErrors, [name]: err.errors[0] })\n            })\n        setFormValues({\n            ...formValues,\n            [name]: value\n        })\n    }\n\n    useEffect(() => {\n        FormSchema.isValid(formValues).then(valid => setDisabled(!valid))\n    }, [formValues])\n\n\n    return (\n        <div>\n            <form className='login container'>\n                <label htmlFor=\"email\">Email: </label>\n                <input\n                    value={formValues.email}\n                    id=\"email\"\n                    onChange={inputChange}\n                    name='email'\n                    type='email'\n                />\n                <label htmlFor=\"password\">Password: </label>\n                <input\n                    value={formValues.password}\n                    id=\"password\"\n                    onChange={inputChange}\n                    name='password'\n                    type='password'\n                />\n                <button className='loginBtn' disabled={disabled}> Login </button>\n            </form>\n        </div>\n    )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}