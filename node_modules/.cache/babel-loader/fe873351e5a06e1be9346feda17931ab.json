{"ast":null,"code":"import axios from 'axios';\nimport axiosWithAuth from '../Utils/axiosWithAuth.js';\nexport const FETCH_REQUEST_PROGRESS = 'FETCH_REQUEST_PROGRESS';\nexport const FETCH_REQUEST_SUCCESS = 'FETCH_REQUEST_SUCCESS';\nexport const FETCH_REQUEST_FAILURE = \"FETCH_REQUEST_FAILURE\";\nexport const ADD_NEW_RECIPE = \"ADD_NEW_RECIPE\";\nexport const SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\";\nexport const EDIT_RECIPE = \"EDIT_RECIPE\";\nexport const DELETE_RECIPE = \"DELETE_RECIPE\";\nexport const SEARCH_RECIPE = \"SEARCH_RECIPE\";\nexport const CLEAR_SEARCH = \"CLEAR_SEARCH\";\nexport const addRecipe = recipeObj => {\n  return {\n    type: ADD_NEW_RECIPE,\n    payload: {\n      id: Date.now(),\n      ...recipeObj\n    }\n  };\n};\nexport const clearSearch = () => {\n  return {\n    type: CLEAR_SEARCH\n  };\n};\nexport const searchRecipe = searchTerm => {\n  return {\n    type: SEARCH_RECIPE,\n    payload: searchTerm\n  };\n};\nexport const deleteRecipe = recipeId => {\n  return {\n    type: DELETE_RECIPE,\n    payload: recipeId\n  };\n};\nexport const editRecipe = editedObj => {\n  return {\n    type: EDIT_RECIPE,\n    payload: editedObj\n  };\n};\nexport const setError = errorMessage => {\n  return {\n    type: SET_ERROR_MESSAGE,\n    payload: errorMessage\n  };\n}; //This helps us decode the token\n\nlet user = localStorage.getItem('authToken');\nlet base64Url = user ? user.split('.')[1] : \" \";\nconst userId = JSON.parse(window.atob(base64Url));\nconsole.log(userId.userID);\nexport const fetchRecipes = () => dispatch => {\n  dispatch({\n    type: FETCH_REQUEST_PROGRESS\n  });\n  axiosWithAuth().get(`/api/users/${userId.userID}/recipes`).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: FETCH_REQUEST_SUCCESS,\n      payload: res.data.recipes\n    });\n  }).catch(err => {\n    console.log(err.message);\n    dispatch({\n      type: FETCH_REQUEST_FAILURE,\n      payload: err.message\n    });\n  });\n};","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/actions/index.js"],"names":["axios","axiosWithAuth","FETCH_REQUEST_PROGRESS","FETCH_REQUEST_SUCCESS","FETCH_REQUEST_FAILURE","ADD_NEW_RECIPE","SET_ERROR_MESSAGE","EDIT_RECIPE","DELETE_RECIPE","SEARCH_RECIPE","CLEAR_SEARCH","addRecipe","recipeObj","type","payload","id","Date","now","clearSearch","searchRecipe","searchTerm","deleteRecipe","recipeId","editRecipe","editedObj","setError","errorMessage","user","localStorage","getItem","base64Url","split","userId","JSON","parse","window","atob","console","log","userID","fetchRecipes","dispatch","get","then","res","data","recipes","catch","err","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,SAAS,GAAIC,SAAD,IAAe;AACpC,SAAO;AAAEC,IAAAA,IAAI,EAAER,cAAR;AAAwBS,IAAAA,OAAO,EAAE;AAAEC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAkB,SAAGL;AAArB;AAAjC,GAAP;AACH,CAFM;AAIP,OAAO,MAAMM,WAAW,GAAG,MAAM;AAC7B,SAAO;AAAEL,IAAAA,IAAI,EAAEH;AAAR,GAAP;AACH,CAFM;AAIP,OAAO,MAAMS,YAAY,GAAIC,UAAD,IAAgB;AACxC,SAAO;AAAEP,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEM;AAAhC,GAAP;AACH,CAFM;AAIP,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc;AACtC,SAAO;AAAET,IAAAA,IAAI,EAAEL,aAAR;AAAuBM,IAAAA,OAAO,EAAEQ;AAAhC,GAAP;AACH,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAIC,SAAD,IAAe;AACrC,SAAO;AAAEX,IAAAA,IAAI,EAAEN,WAAR;AAAqBO,IAAAA,OAAO,EAAEU;AAA9B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;AACtC,SAAO;AAAEb,IAAAA,IAAI,EAAEP,iBAAR;AAA2BQ,IAAAA,OAAO,EAAEY;AAApC,GAAP;AACH,CAFM,C,CAIP;;AAEA,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX;AACA,IAAIC,SAAS,GAAIH,IAAD,GAASA,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAT,GAA8B,GAA9C;AACA,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAYC,MAAM,CAACC,IAAP,CAAYN,SAAZ,CAAZ,CAAf;AACAO,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACO,MAAnB;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAAC;AAAE5B,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AACAD,EAAAA,aAAa,GAAGyC,GAAhB,CAAqB,cAAaV,MAAM,CAACO,MAAO,UAAhD,EACKI,IADL,CACWC,GAAD,IAAS;AACXP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACC,IAAhB;AACAJ,IAAAA,QAAQ,CAAC;AAAE5B,MAAAA,IAAI,EAAEV,qBAAR;AAA+BW,MAAAA,OAAO,EAAE8B,GAAG,CAACC,IAAJ,CAASC;AAAjD,KAAD,CAAR;AACH,GAJL,EAKKC,KALL,CAKYC,GAAD,IAAS;AACZX,IAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACC,OAAhB;AACAR,IAAAA,QAAQ,CAAC;AAAE5B,MAAAA,IAAI,EAAET,qBAAR;AAA+BU,MAAAA,OAAO,EAAEkC,GAAG,CAACC;AAA5C,KAAD,CAAR;AACH,GARL;AASH,CAXM","sourcesContent":["import axios from 'axios';\nimport axiosWithAuth from '../Utils/axiosWithAuth.js';\n\nexport const FETCH_REQUEST_PROGRESS = 'FETCH_REQUEST_PROGRESS';\nexport const FETCH_REQUEST_SUCCESS = 'FETCH_REQUEST_SUCCESS';\nexport const FETCH_REQUEST_FAILURE = \"FETCH_REQUEST_FAILURE\";\nexport const ADD_NEW_RECIPE = \"ADD_NEW_RECIPE\";\nexport const SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\";\nexport const EDIT_RECIPE = \"EDIT_RECIPE\";\nexport const DELETE_RECIPE = \"DELETE_RECIPE\";\nexport const SEARCH_RECIPE = \"SEARCH_RECIPE\";\nexport const CLEAR_SEARCH = \"CLEAR_SEARCH\";\n\nexport const addRecipe = (recipeObj) => {\n    return { type: ADD_NEW_RECIPE, payload: { id: Date.now(), ...recipeObj } };\n}\n\nexport const clearSearch = () => {\n    return { type: CLEAR_SEARCH };\n}\n\nexport const searchRecipe = (searchTerm) => {\n    return { type: SEARCH_RECIPE, payload: searchTerm };\n}\n\nexport const deleteRecipe = (recipeId) => {\n    return { type: DELETE_RECIPE, payload: recipeId };\n}\n\nexport const editRecipe = (editedObj) => {\n    return { type: EDIT_RECIPE, payload: editedObj };\n}\n\nexport const setError = (errorMessage) => {\n    return { type: SET_ERROR_MESSAGE, payload: errorMessage };\n}\n\n//This helps us decode the token\n\nlet user = localStorage.getItem('authToken');\nlet base64Url = (user) ? user.split('.')[1] : \" \";\nconst userId = JSON.parse((window.atob(base64Url)));\nconsole.log(userId.userID);\n\n\nexport const fetchRecipes = () => (dispatch) => {\n    dispatch({ type: FETCH_REQUEST_PROGRESS })\n    axiosWithAuth().get(`/api/users/${userId.userID}/recipes`)\n        .then((res) => {\n            console.log(res.data);\n            dispatch({ type: FETCH_REQUEST_SUCCESS, payload: res.data.recipes })\n        })\n        .catch((err) => {\n            console.log(err.message);\n            dispatch({ type: FETCH_REQUEST_FAILURE, payload: err.message })\n        })\n}\n\n"]},"metadata":{},"sourceType":"module"}