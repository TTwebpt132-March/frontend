{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/recipeform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = props => {\n  _s();\n\n  const blankIngredient = {\n    name: ''\n  };\n  const blankInstruction = {\n    step: ''\n  };\n  const [form, setForm] = useState({\n    title: '',\n    source: '',\n    ingredients: [blankIngredient],\n    instructions: [blankInstruction]\n  });\n\n  const addIngredients = () => {\n    setForm({ ...form,\n      ingredients: [...form.ingredients, { ...blankIngredient\n      }]\n    });\n  };\n\n  const addInstructions = () => {\n    setForm({ ...form,\n      instructions: [...form.instructions, { ...blankInstruction\n      }]\n    });\n  };\n\n  const nonDynamicChange = evt => {\n    console.log(evt.target.name);\n    setForm({ ...form,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const instructionChange = evt => {\n    console.log(evt.target.name);\n    const updatedInstructions = [...form.instructions];\n    updatedInstructions[evt.target.dataset.idx][evt.target.className] = evt.target.value;\n    setForm({ ...form,\n      instructions: updatedInstructions\n    });\n  };\n\n  const ingredientChange = evt => {\n    console.log(evt.target.name);\n    const updatedIngredients = [...form.ingredients];\n    updatedIngredients[evt.target.dataset.idx][evt.target.className] = evt.target.value;\n    setForm({ ...form,\n      ingredients: updatedIngredients\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Recipe Form\", /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"recipeForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"recipeTitle\",\n        children: \" Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"recipeTitle\",\n        name: \"title\",\n        placeholder: \"Recipe Title\",\n        onChange: nonDynamicChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"recipeSource\",\n        children: \" Source: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"recipeSource\",\n        name: \"source\",\n        placeholder: \"Recipe Source Ex. Grandma, Mom\",\n        onChange: nonDynamicChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), form.ingredients.map((val, idx) => {\n        const ingredientId = `name-${idx}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: ingredientId,\n            children: `Ingredient #${idx + 1}: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: ingredientId,\n            \"data-idx\": idx,\n            id: ingredientId,\n            onChange: ingredientChange,\n            className: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, `ingredient-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add Ingredients\",\n        onClick: addIngredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), form.instructions.map((val, idx) => {\n        const instructionId = `name-${idx}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: instructionId,\n            children: `Instruction #${idx + 1}: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: instructionId,\n            \"data-idx\": idx,\n            id: instructionId,\n            className: \"step\",\n            onChange: instructionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, `instruction-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add Instructions\",\n        onClick: addInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecipeForm, \"uPxxowoRKR6cZbEkT041t3X1xlc=\");\n\n_c = RecipeForm;\nexport default RecipeForm;\n/*\nRecipeForm should have a title, source (ex Grandma), ingredients, instructions, and category (dinner, chicken, dessert, pasta)\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/recipeform.js"],"names":["React","useState","RecipeForm","props","blankIngredient","name","blankInstruction","step","form","setForm","title","source","ingredients","instructions","addIngredients","addInstructions","nonDynamicChange","evt","console","log","target","value","instructionChange","updatedInstructions","dataset","idx","className","ingredientChange","updatedIngredients","map","val","ingredientId","instructionId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst RecipeForm = (props) => {\n    const blankIngredient = {\n        name: '',\n    }\n\n    const blankInstruction = {\n        step: '',\n    }\n\n    const [form, setForm] = useState({\n        title: '',\n        source: '',\n\n        ingredients: [blankIngredient],\n        instructions: [blankInstruction],\n    })\n\n    const addIngredients = () => {\n        setForm({ ...form, ingredients: [...form.ingredients, { ...blankIngredient }] })\n    }\n\n    const addInstructions = () => {\n        setForm({ ...form, instructions: [...form.instructions, { ...blankInstruction }] })\n    }\n\n    const nonDynamicChange = (evt) => {\n        console.log(evt.target.name)\n        setForm({ ...form, [evt.target.name]: evt.target.value })\n    }\n\n    const instructionChange = (evt) => {\n        console.log(evt.target.name)\n        const updatedInstructions = [...form.instructions];\n        updatedInstructions[evt.target.dataset.idx][evt.target.className] = evt.target.value;\n        setForm({ ...form, instructions: updatedInstructions });\n    }\n\n    const ingredientChange = (evt) => {\n        console.log(evt.target.name)\n        const updatedIngredients = [...form.ingredients];\n        updatedIngredients[evt.target.dataset.idx][evt.target.className] = evt.target.value;\n        setForm({ ...form, ingredients: updatedIngredients });\n    }\n\n    return (\n        <div className=\"App\">\n            Recipe Form\n            <form className=\"recipeForm\">\n                <label for=\"recipeTitle\"> Title: </label>\n                <input\n                    id=\"recipeTitle\"\n                    name=\"title\"\n                    placeholder=\"Recipe Title\"\n                    onChange={nonDynamicChange}\n                />\n                <label for=\"recipeSource\"> Source: </label>\n                <input\n                    id=\"recipeSource\"\n                    name=\"source\"\n                    placeholder=\"Recipe Source Ex. Grandma, Mom\"\n                    onChange={nonDynamicChange}\n                />\n                {\n                    form.ingredients.map((val, idx) => {\n                        const ingredientId = `name-${idx}`;\n                        return (\n                            <div key={`ingredient-${idx}`} className='ingredients'>\n                                <label for={ingredientId}>{`Ingredient #${idx + 1}: `}</label>\n                                <input\n                                    type=\"text\"\n                                    name={ingredientId}\n                                    data-idx={idx}\n                                    id={ingredientId}\n                                    onChange={ingredientChange}\n                                    className=\"name\"\n                                />\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"button\" value=\"Add Ingredients\" onClick={addIngredients} />\n                {\n                    form.instructions.map((val, idx) => {\n                        const instructionId = `name-${idx}`;\n                        return (\n                            <div key={`instruction-${idx}`} className=\"instructions\">\n                                <label for={instructionId}>{`Instruction #${idx + 1}: `}</label>\n                                <input\n                                    type=\"text\"\n                                    name={instructionId}\n                                    data-idx={idx}\n                                    id={instructionId}\n                                    className=\"step\"\n                                    onChange={instructionChange}\n                                />\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"button\" value=\"Add Instructions\" onClick={addInstructions} />\n                <button>Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default RecipeForm;\n\n/*\nRecipeForm should have a title, source (ex Grandma), ingredients, instructions, and category (dinner, chicken, dessert, pasta)\n*/"]},"metadata":{},"sourceType":"module"}