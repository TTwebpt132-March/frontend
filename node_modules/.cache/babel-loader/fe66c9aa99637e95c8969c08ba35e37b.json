{"ast":null,"code":"var _jsxFileName = \"/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/editForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'reactstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditForm = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n\n  const navigateFunction = evt => {\n    history.push('/dashboard');\n  };\n\n  const [form, setForm] = useState({});\n  useEffect(() => {\n    setForm(...props.recipes.filter(recipe => recipe.id === parseInt(id)));\n  }, [id, props.recipes]);\n\n  if (Object.keys(form).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Fetching Recipe Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  console.log(form);\n\n  const addIngredients = () => {\n    setForm({ ...form,\n      ingredients: [...form.ingredients, { ...blankIngredient\n      }]\n    });\n  };\n\n  const addCategory = () => {\n    setForm({ ...form,\n      category: [...form.category, { ...blankCategory\n      }]\n    });\n  };\n\n  const nonDynamicChange = evt => {\n    console.log(evt.target.name, evt.target.value);\n    setForm({ ...form,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const categoryChange = evt => {\n    console.log(evt.target.name, evt.target.value);\n    const updatedCategory = [...form.category];\n    updatedCategory[evt.target.dataset.idx][evt.target.className] = evt.target.value;\n    setForm({ ...form,\n      category: updatedCategory\n    });\n  };\n\n  const ingredientChange = evt => {\n    console.log(evt.target.name, evt.target.value);\n    const updatedIngredients = [...form.ingredients];\n    updatedIngredients[evt.target.dataset.idx][evt.target.className] = evt.target.value;\n    setForm({ ...form,\n      ingredients: updatedIngredients\n    });\n  };\n\n  const formSubmit = evt => {\n    evt.preventDefault();\n    console.log(form);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navButton\",\n      onClick: navigateFunction,\n      children: \"Return to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"recipeForm\",\n      onSubmit: formSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enter Recipe:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeTitle\",\n          children: \" Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"recipeTitle\",\n          name: \"title\",\n          value: form.title,\n          placeholder: \"Recipe Title\",\n          onChange: nonDynamicChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeSource\",\n          children: \" Source: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"recipeSource\",\n          name: \"source\",\n          value: form.source,\n          placeholder: \"Ex. Grandma, Mom\",\n          onChange: nonDynamicChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), form.ingredients.map((val, idx) => {\n        const ingredientId = `name-${idx}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredients form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: ingredientId,\n            children: `Ingredient #${idx + 1}: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: ingredientId,\n            \"data-idx\": idx,\n            value: form.ingredients[idx].name,\n            id: ingredientId,\n            placeholder: `Enter Ingredient`,\n            onChange: ingredientChange,\n            className: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this)]\n        }, `ingredient-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add Ingredients\",\n        onClick: addIngredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), form.category.map((val, idx) => {\n        const categoryId = `name-${idx}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categories form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: categoryId,\n            children: `Category #${idx + 1}: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: categoryId,\n            placeholder: `Enter Category`,\n            \"data-idx\": idx,\n            value: form.category[idx].type,\n            id: categoryId,\n            className: \"type\",\n            onChange: categoryChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this)]\n        }, `category-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add Categories\",\n        onClick: addCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipeInstructions\",\n          children: \" Instructions: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"recipeInstructions\",\n          name: \"instructions\",\n          value: form.instructions,\n          placeholder: \"input instructions\",\n          onChange: nonDynamicChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"VQSuw4hqKapsz+drD3qaKeSX1H0=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditForm;\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nexport default connect(mapStateToProps, null)(EditForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["/Users/jayaramnair/Desktop/Lambda School/repos/Build-Week/frontend/recipes/src/Components/editForm.js"],"names":["React","useState","useEffect","Container","useHistory","useParams","connect","EditForm","props","history","id","console","log","navigateFunction","evt","push","form","setForm","recipes","filter","recipe","parseInt","Object","keys","length","addIngredients","ingredients","blankIngredient","addCategory","category","blankCategory","nonDynamicChange","target","name","value","categoryChange","updatedCategory","dataset","idx","className","ingredientChange","updatedIngredients","formSubmit","preventDefault","title","source","map","val","ingredientId","categoryId","type","instructions","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from 'reactstrap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst EditForm = (props) => {\n    const history = useHistory();\n\n    const { id } = useParams();\n    console.log(id);\n\n    const navigateFunction = (evt) => {\n        history.push('/dashboard');\n    }\n\n    const [form, setForm] = useState({})\n\n    useEffect(() => {\n        setForm(...props.recipes.filter((recipe) => recipe.id === parseInt(id)));\n    }, [id, props.recipes])\n\n\n    if (Object.keys(form).length === 0) {\n        return <div>Fetching Recipe Details</div>\n    }\n\n    console.log(form);\n\n    const addIngredients = () => {\n        setForm({ ...form, ingredients: [...form.ingredients, { ...blankIngredient }] })\n    }\n\n    const addCategory = () => {\n        setForm({ ...form, category: [...form.category, { ...blankCategory }] })\n    }\n\n    const nonDynamicChange = (evt) => {\n        console.log(evt.target.name, evt.target.value)\n        setForm({ ...form, [evt.target.name]: evt.target.value })\n    }\n\n    const categoryChange = (evt) => {\n        console.log(evt.target.name, evt.target.value)\n        const updatedCategory = [...form.category];\n        updatedCategory[evt.target.dataset.idx][evt.target.className] = evt.target.value;\n        setForm({ ...form, category: updatedCategory });\n    }\n\n    const ingredientChange = (evt) => {\n        console.log(evt.target.name, evt.target.value)\n        const updatedIngredients = [...form.ingredients];\n        updatedIngredients[evt.target.dataset.idx][evt.target.className] = evt.target.value;\n        setForm({ ...form, ingredients: updatedIngredients });\n    }\n\n    const formSubmit = (evt) => {\n        evt.preventDefault();\n        console.log(form)\n    }\n\n    return (\n        <Container>\n            <button className=\"navButton\" onClick={navigateFunction}>Return to Dashboard</button>\n            <form className=\"recipeForm\" onSubmit={formSubmit}>\n                <h3>Enter Recipe:</h3>\n                <div className=\"form-group\">\n                    <label htmlFor=\"recipeTitle\"> Title: </label>\n                    <input\n                        id=\"recipeTitle\"\n                        name=\"title\"\n                        value={form.title}\n                        placeholder=\"Recipe Title\"\n                        onChange={nonDynamicChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"recipeSource\"> Source: </label>\n                    <input\n                        id=\"recipeSource\"\n                        name=\"source\"\n                        value={form.source}\n                        placeholder=\"Ex. Grandma, Mom\"\n                        onChange={nonDynamicChange}\n                    />\n                </div>\n\n                {\n                    form.ingredients.map((val, idx) => {\n                        const ingredientId = `name-${idx}`;\n                        return (\n                            <div key={`ingredient-${idx}`} className='ingredients form-group'>\n                                <label htmlFor={ingredientId}>{`Ingredient #${idx + 1}: `}</label>\n                                <input\n                                    type=\"text\"\n                                    name={ingredientId}\n                                    data-idx={idx}\n                                    value={form.ingredients[idx].name}\n                                    id={ingredientId}\n                                    placeholder={`Enter Ingredient`}\n                                    onChange={ingredientChange}\n                                    className=\"name\"\n                                />\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"button\" value=\"Add Ingredients\" onClick={addIngredients} />\n                {\n                    form.category.map((val, idx) => {\n                        const categoryId = `name-${idx}`;\n                        return (\n                            <div key={`category-${idx}`} className=\"categories form-group\">\n                                <label htmlFor={categoryId}>{`Category #${idx + 1}: `}</label>\n                                <input\n                                    type=\"text\"\n                                    name={categoryId}\n                                    placeholder={`Enter Category`}\n                                    data-idx={idx}\n                                    value={form.category[idx].type}\n                                    id={categoryId}\n                                    className=\"type\"\n                                    onChange={categoryChange}\n                                />\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"button\" value=\"Add Categories\" onClick={addCategory} />\n                <div className=\"form-group\">\n                    <label htmlFor=\"recipeInstructions\"> Instructions: </label>\n                    <input\n                        id=\"recipeInstructions\"\n                        name=\"instructions\"\n                        value={form.instructions}\n                        placeholder=\"input instructions\"\n                        onChange={nonDynamicChange}\n                    />\n                </div>\n                <button>Update Changes</button>\n            </form>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        recipes: state.recipes\n    }\n}\n\nexport default connect(mapStateToProps, null)(EditForm);"]},"metadata":{},"sourceType":"module"}